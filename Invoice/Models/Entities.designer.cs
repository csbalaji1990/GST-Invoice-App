#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Invoice.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SimpleGstInvoicer")]
	public partial class EntitiesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDbBankAccount(DbBankAccount instance);
    partial void UpdateDbBankAccount(DbBankAccount instance);
    partial void DeleteDbBankAccount(DbBankAccount instance);
    partial void InsertDbUnit(DbUnit instance);
    partial void UpdateDbUnit(DbUnit instance);
    partial void DeleteDbUnit(DbUnit instance);
    partial void InsertDbBankTransaction(DbBankTransaction instance);
    partial void UpdateDbBankTransaction(DbBankTransaction instance);
    partial void DeleteDbBankTransaction(DbBankTransaction instance);
    partial void InsertDbCategory(DbCategory instance);
    partial void UpdateDbCategory(DbCategory instance);
    partial void DeleteDbCategory(DbCategory instance);
    partial void InsertDbCompany(DbCompany instance);
    partial void UpdateDbCompany(DbCompany instance);
    partial void DeleteDbCompany(DbCompany instance);
    partial void InsertDbCountry(DbCountry instance);
    partial void UpdateDbCountry(DbCountry instance);
    partial void DeleteDbCountry(DbCountry instance);
    partial void InsertDbCustomer(DbCustomer instance);
    partial void UpdateDbCustomer(DbCustomer instance);
    partial void DeleteDbCustomer(DbCustomer instance);
    partial void InsertDbCustomerLedger(DbCustomerLedger instance);
    partial void UpdateDbCustomerLedger(DbCustomerLedger instance);
    partial void DeleteDbCustomerLedger(DbCustomerLedger instance);
    partial void InsertDbDeposit(DbDeposit instance);
    partial void UpdateDbDeposit(DbDeposit instance);
    partial void DeleteDbDeposit(DbDeposit instance);
    partial void InsertDbExpense(DbExpense instance);
    partial void UpdateDbExpense(DbExpense instance);
    partial void DeleteDbExpense(DbExpense instance);
    partial void InsertDbItem(DbItem instance);
    partial void UpdateDbItem(DbItem instance);
    partial void DeleteDbItem(DbItem instance);
    partial void InsertDbPaymentMethod(DbPaymentMethod instance);
    partial void UpdateDbPaymentMethod(DbPaymentMethod instance);
    partial void DeleteDbPaymentMethod(DbPaymentMethod instance);
    partial void InsertDbPaymentTerm(DbPaymentTerm instance);
    partial void UpdateDbPaymentTerm(DbPaymentTerm instance);
    partial void DeleteDbPaymentTerm(DbPaymentTerm instance);
    partial void InsertDbPurchaseInvoiceHeader(DbPurchaseInvoiceHeader instance);
    partial void UpdateDbPurchaseInvoiceHeader(DbPurchaseInvoiceHeader instance);
    partial void DeleteDbPurchaseInvoiceHeader(DbPurchaseInvoiceHeader instance);
    partial void InsertDbPurchaseInvoiceHsnSacDetail(DbPurchaseInvoiceHsnSacDetail instance);
    partial void UpdateDbPurchaseInvoiceHsnSacDetail(DbPurchaseInvoiceHsnSacDetail instance);
    partial void DeleteDbPurchaseInvoiceHsnSacDetail(DbPurchaseInvoiceHsnSacDetail instance);
    partial void InsertDbPurchaseInvoiceItemDetail(DbPurchaseInvoiceItemDetail instance);
    partial void UpdateDbPurchaseInvoiceItemDetail(DbPurchaseInvoiceItemDetail instance);
    partial void DeleteDbPurchaseInvoiceItemDetail(DbPurchaseInvoiceItemDetail instance);
    partial void InsertDbQuotationHeader(DbQuotationHeader instance);
    partial void UpdateDbQuotationHeader(DbQuotationHeader instance);
    partial void DeleteDbQuotationHeader(DbQuotationHeader instance);
    partial void InsertDbQuotationHsnSacDetail(DbQuotationHsnSacDetail instance);
    partial void UpdateDbQuotationHsnSacDetail(DbQuotationHsnSacDetail instance);
    partial void DeleteDbQuotationHsnSacDetail(DbQuotationHsnSacDetail instance);
    partial void InsertDbQuotationItemDetail(DbQuotationItemDetail instance);
    partial void UpdateDbQuotationItemDetail(DbQuotationItemDetail instance);
    partial void DeleteDbQuotationItemDetail(DbQuotationItemDetail instance);
    partial void InsertDbSalesInvoiceHeader(DbSalesInvoiceHeader instance);
    partial void UpdateDbSalesInvoiceHeader(DbSalesInvoiceHeader instance);
    partial void DeleteDbSalesInvoiceHeader(DbSalesInvoiceHeader instance);
    partial void InsertDbSalesInvoiceHsnSacDetail(DbSalesInvoiceHsnSacDetail instance);
    partial void UpdateDbSalesInvoiceHsnSacDetail(DbSalesInvoiceHsnSacDetail instance);
    partial void DeleteDbSalesInvoiceHsnSacDetail(DbSalesInvoiceHsnSacDetail instance);
    partial void InsertDbSalesInvoiceItemDetail(DbSalesInvoiceItemDetail instance);
    partial void UpdateDbSalesInvoiceItemDetail(DbSalesInvoiceItemDetail instance);
    partial void DeleteDbSalesInvoiceItemDetail(DbSalesInvoiceItemDetail instance);
    partial void InsertDbState(DbState instance);
    partial void UpdateDbState(DbState instance);
    partial void DeleteDbState(DbState instance);
    partial void InsertDbStateCode(DbStateCode instance);
    partial void UpdateDbStateCode(DbStateCode instance);
    partial void DeleteDbStateCode(DbStateCode instance);
    partial void InsertDbSupplier(DbSupplier instance);
    partial void UpdateDbSupplier(DbSupplier instance);
    partial void DeleteDbSupplier(DbSupplier instance);
    partial void InsertDbSupplierLedger(DbSupplierLedger instance);
    partial void UpdateDbSupplierLedger(DbSupplierLedger instance);
    partial void DeleteDbSupplierLedger(DbSupplierLedger instance);
    partial void InsertDbTax(DbTax instance);
    partial void UpdateDbTax(DbTax instance);
    partial void DeleteDbTax(DbTax instance);
    #endregion
		
		public EntitiesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["InvoiceConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EntitiesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EntitiesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EntitiesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EntitiesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DbBankAccount> DbBankAccounts
		{
			get
			{
				return this.GetTable<DbBankAccount>();
			}
		}
		
		public System.Data.Linq.Table<DbUnit> DbUnits
		{
			get
			{
				return this.GetTable<DbUnit>();
			}
		}
		
		public System.Data.Linq.Table<DbBankTransaction> DbBankTransactions
		{
			get
			{
				return this.GetTable<DbBankTransaction>();
			}
		}
		
		public System.Data.Linq.Table<DbCategory> DbCategories
		{
			get
			{
				return this.GetTable<DbCategory>();
			}
		}
		
		public System.Data.Linq.Table<DbCompany> DbCompanies
		{
			get
			{
				return this.GetTable<DbCompany>();
			}
		}
		
		public System.Data.Linq.Table<DbCountry> DbCountries
		{
			get
			{
				return this.GetTable<DbCountry>();
			}
		}
		
		public System.Data.Linq.Table<DbCustomer> DbCustomers
		{
			get
			{
				return this.GetTable<DbCustomer>();
			}
		}
		
		public System.Data.Linq.Table<DbCustomerLedger> DbCustomerLedgers
		{
			get
			{
				return this.GetTable<DbCustomerLedger>();
			}
		}
		
		public System.Data.Linq.Table<DbDeposit> DbDeposits
		{
			get
			{
				return this.GetTable<DbDeposit>();
			}
		}
		
		public System.Data.Linq.Table<DbExpense> DbExpenses
		{
			get
			{
				return this.GetTable<DbExpense>();
			}
		}
		
		public System.Data.Linq.Table<DbItem> DbItems
		{
			get
			{
				return this.GetTable<DbItem>();
			}
		}
		
		public System.Data.Linq.Table<DbPaymentMethod> DbPaymentMethods
		{
			get
			{
				return this.GetTable<DbPaymentMethod>();
			}
		}
		
		public System.Data.Linq.Table<DbPaymentTerm> DbPaymentTerms
		{
			get
			{
				return this.GetTable<DbPaymentTerm>();
			}
		}
		
		public System.Data.Linq.Table<DbPurchaseInvoiceHeader> DbPurchaseInvoiceHeaders
		{
			get
			{
				return this.GetTable<DbPurchaseInvoiceHeader>();
			}
		}
		
		public System.Data.Linq.Table<DbPurchaseInvoiceHsnSacDetail> DbPurchaseInvoiceHsnSacDetails
		{
			get
			{
				return this.GetTable<DbPurchaseInvoiceHsnSacDetail>();
			}
		}
		
		public System.Data.Linq.Table<DbPurchaseInvoiceItemDetail> DbPurchaseInvoiceItemDetails
		{
			get
			{
				return this.GetTable<DbPurchaseInvoiceItemDetail>();
			}
		}
		
		public System.Data.Linq.Table<DbQuotationHeader> DbQuotationHeaders
		{
			get
			{
				return this.GetTable<DbQuotationHeader>();
			}
		}
		
		public System.Data.Linq.Table<DbQuotationHsnSacDetail> DbQuotationHsnSacDetails
		{
			get
			{
				return this.GetTable<DbQuotationHsnSacDetail>();
			}
		}
		
		public System.Data.Linq.Table<DbQuotationItemDetail> DbQuotationItemDetails
		{
			get
			{
				return this.GetTable<DbQuotationItemDetail>();
			}
		}
		
		public System.Data.Linq.Table<DbSalesInvoiceHeader> DbSalesInvoiceHeaders
		{
			get
			{
				return this.GetTable<DbSalesInvoiceHeader>();
			}
		}
		
		public System.Data.Linq.Table<DbSalesInvoiceHsnSacDetail> DbSalesInvoiceHsnSacDetails
		{
			get
			{
				return this.GetTable<DbSalesInvoiceHsnSacDetail>();
			}
		}
		
		public System.Data.Linq.Table<DbSalesInvoiceItemDetail> DbSalesInvoiceItemDetails
		{
			get
			{
				return this.GetTable<DbSalesInvoiceItemDetail>();
			}
		}
		
		public System.Data.Linq.Table<DbState> DbStates
		{
			get
			{
				return this.GetTable<DbState>();
			}
		}
		
		public System.Data.Linq.Table<DbStateCode> DbStateCodes
		{
			get
			{
				return this.GetTable<DbStateCode>();
			}
		}
		
		public System.Data.Linq.Table<DbSupplier> DbSuppliers
		{
			get
			{
				return this.GetTable<DbSupplier>();
			}
		}
		
		public System.Data.Linq.Table<DbSupplierLedger> DbSupplierLedgers
		{
			get
			{
				return this.GetTable<DbSupplierLedger>();
			}
		}
		
		public System.Data.Linq.Table<DbTax> DbTaxes
		{
			get
			{
				return this.GetTable<DbTax>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DbBankAccount")]
	public partial class DbBankAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BankAccountId;
		
		private string _AccountNo;
		
		private string _AccountName;
		
		private string _AccountType;
		
		private string _BankName;
		
		private string _Branch;
		
		private string _Ifsc;
		
		private float _Balance;
		
		private EntitySet<DbBankTransaction> _DbBankTransactions;
		
		private EntitySet<DbCustomerLedger> _DbCustomerLedgers;
		
		private EntitySet<DbDeposit> _DbDeposits;
		
		private EntitySet<DbExpense> _DbExpenses;
		
		private EntitySet<DbSupplierLedger> _DbSupplierLedgers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBankAccountIdChanging(int value);
    partial void OnBankAccountIdChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    partial void OnAccountNameChanging(string value);
    partial void OnAccountNameChanged();
    partial void OnAccountTypeChanging(string value);
    partial void OnAccountTypeChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    partial void OnIfscChanging(string value);
    partial void OnIfscChanged();
    partial void OnBalanceChanging(float value);
    partial void OnBalanceChanged();
    #endregion
		
		public DbBankAccount()
		{
			this._DbBankTransactions = new EntitySet<DbBankTransaction>(new Action<DbBankTransaction>(this.attach_DbBankTransactions), new Action<DbBankTransaction>(this.detach_DbBankTransactions));
			this._DbCustomerLedgers = new EntitySet<DbCustomerLedger>(new Action<DbCustomerLedger>(this.attach_DbCustomerLedgers), new Action<DbCustomerLedger>(this.detach_DbCustomerLedgers));
			this._DbDeposits = new EntitySet<DbDeposit>(new Action<DbDeposit>(this.attach_DbDeposits), new Action<DbDeposit>(this.detach_DbDeposits));
			this._DbExpenses = new EntitySet<DbExpense>(new Action<DbExpense>(this.attach_DbExpenses), new Action<DbExpense>(this.detach_DbExpenses));
			this._DbSupplierLedgers = new EntitySet<DbSupplierLedger>(new Action<DbSupplierLedger>(this.attach_DbSupplierLedgers), new Action<DbSupplierLedger>(this.detach_DbSupplierLedgers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BankAccountId
		{
			get
			{
				return this._BankAccountId;
			}
			set
			{
				if ((this._BankAccountId != value))
				{
					this.OnBankAccountIdChanging(value);
					this.SendPropertyChanging();
					this._BankAccountId = value;
					this.SendPropertyChanged("BankAccountId");
					this.OnBankAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="VarChar(50)")]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this.OnAccountNameChanging(value);
					this.SendPropertyChanging();
					this._AccountName = value;
					this.SendPropertyChanged("AccountName");
					this.OnAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountType", DbType="VarChar(50)")]
		public string AccountType
		{
			get
			{
				return this._AccountType;
			}
			set
			{
				if ((this._AccountType != value))
				{
					this.OnAccountTypeChanging(value);
					this.SendPropertyChanging();
					this._AccountType = value;
					this.SendPropertyChanged("AccountType");
					this.OnAccountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(50)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(50)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ifsc", DbType="VarChar(50)")]
		public string Ifsc
		{
			get
			{
				return this._Ifsc;
			}
			set
			{
				if ((this._Ifsc != value))
				{
					this.OnIfscChanging(value);
					this.SendPropertyChanging();
					this._Ifsc = value;
					this.SendPropertyChanged("Ifsc");
					this.OnIfscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Real NOT NULL")]
		public float Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbBankAccount_DbBankTransaction", Storage="_DbBankTransactions", ThisKey="BankAccountId", OtherKey="BankAccountId")]
		public EntitySet<DbBankTransaction> DbBankTransactions
		{
			get
			{
				return this._DbBankTransactions;
			}
			set
			{
				this._DbBankTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbBankAccount_DbCustomerLedger", Storage="_DbCustomerLedgers", ThisKey="BankAccountId", OtherKey="BankAccountId")]
		public EntitySet<DbCustomerLedger> DbCustomerLedgers
		{
			get
			{
				return this._DbCustomerLedgers;
			}
			set
			{
				this._DbCustomerLedgers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbBankAccount_DbDeposit", Storage="_DbDeposits", ThisKey="BankAccountId", OtherKey="BankAccountId")]
		public EntitySet<DbDeposit> DbDeposits
		{
			get
			{
				return this._DbDeposits;
			}
			set
			{
				this._DbDeposits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbBankAccount_DbExpense", Storage="_DbExpenses", ThisKey="BankAccountId", OtherKey="BankAccountId")]
		public EntitySet<DbExpense> DbExpenses
		{
			get
			{
				return this._DbExpenses;
			}
			set
			{
				this._DbExpenses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbBankAccount_DbSupplierLedger", Storage="_DbSupplierLedgers", ThisKey="BankAccountId", OtherKey="BankAccountId")]
		public EntitySet<DbSupplierLedger> DbSupplierLedgers
		{
			get
			{
				return this._DbSupplierLedgers;
			}
			set
			{
				this._DbSupplierLedgers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DbBankTransactions(DbBankTransaction entity)
		{
			this.SendPropertyChanging();
			entity.DbBankAccount = this;
		}
		
		private void detach_DbBankTransactions(DbBankTransaction entity)
		{
			this.SendPropertyChanging();
			entity.DbBankAccount = null;
		}
		
		private void attach_DbCustomerLedgers(DbCustomerLedger entity)
		{
			this.SendPropertyChanging();
			entity.DbBankAccount = this;
		}
		
		private void detach_DbCustomerLedgers(DbCustomerLedger entity)
		{
			this.SendPropertyChanging();
			entity.DbBankAccount = null;
		}
		
		private void attach_DbDeposits(DbDeposit entity)
		{
			this.SendPropertyChanging();
			entity.DbBankAccount = this;
		}
		
		private void detach_DbDeposits(DbDeposit entity)
		{
			this.SendPropertyChanging();
			entity.DbBankAccount = null;
		}
		
		private void attach_DbExpenses(DbExpense entity)
		{
			this.SendPropertyChanging();
			entity.DbBankAccount = this;
		}
		
		private void detach_DbExpenses(DbExpense entity)
		{
			this.SendPropertyChanging();
			entity.DbBankAccount = null;
		}
		
		private void attach_DbSupplierLedgers(DbSupplierLedger entity)
		{
			this.SendPropertyChanging();
			entity.DbBankAccount = this;
		}
		
		private void detach_DbSupplierLedgers(DbSupplierLedger entity)
		{
			this.SendPropertyChanging();
			entity.DbBankAccount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DbUnit")]
	public partial class DbUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UnitId;
		
		private string _UnitName;
		
		private EntitySet<DbItem> _DbItems;
		
		private EntitySet<DbPurchaseInvoiceItemDetail> _DbPurchaseInvoiceItemDetails;
		
		private EntitySet<DbQuotationItemDetail> _DbQuotationItemDetails;
		
		private EntitySet<DbSalesInvoiceItemDetail> _DbSalesInvoiceItemDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnUnitNameChanging(string value);
    partial void OnUnitNameChanged();
    #endregion
		
		public DbUnit()
		{
			this._DbItems = new EntitySet<DbItem>(new Action<DbItem>(this.attach_DbItems), new Action<DbItem>(this.detach_DbItems));
			this._DbPurchaseInvoiceItemDetails = new EntitySet<DbPurchaseInvoiceItemDetail>(new Action<DbPurchaseInvoiceItemDetail>(this.attach_DbPurchaseInvoiceItemDetails), new Action<DbPurchaseInvoiceItemDetail>(this.detach_DbPurchaseInvoiceItemDetails));
			this._DbQuotationItemDetails = new EntitySet<DbQuotationItemDetail>(new Action<DbQuotationItemDetail>(this.attach_DbQuotationItemDetails), new Action<DbQuotationItemDetail>(this.detach_DbQuotationItemDetails));
			this._DbSalesInvoiceItemDetails = new EntitySet<DbSalesInvoiceItemDetail>(new Action<DbSalesInvoiceItemDetail>(this.attach_DbSalesInvoiceItemDetails), new Action<DbSalesInvoiceItemDetail>(this.detach_DbSalesInvoiceItemDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this.OnUnitNameChanging(value);
					this.SendPropertyChanging();
					this._UnitName = value;
					this.SendPropertyChanged("UnitName");
					this.OnUnitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbUnit_DbItem", Storage="_DbItems", ThisKey="UnitId", OtherKey="UnitId")]
		public EntitySet<DbItem> DbItems
		{
			get
			{
				return this._DbItems;
			}
			set
			{
				this._DbItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbUnit_DbPurchaseInvoiceItemDetail", Storage="_DbPurchaseInvoiceItemDetails", ThisKey="UnitId", OtherKey="UnitId")]
		public EntitySet<DbPurchaseInvoiceItemDetail> DbPurchaseInvoiceItemDetails
		{
			get
			{
				return this._DbPurchaseInvoiceItemDetails;
			}
			set
			{
				this._DbPurchaseInvoiceItemDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbUnit_DbQuotationItemDetail", Storage="_DbQuotationItemDetails", ThisKey="UnitId", OtherKey="UnitId")]
		public EntitySet<DbQuotationItemDetail> DbQuotationItemDetails
		{
			get
			{
				return this._DbQuotationItemDetails;
			}
			set
			{
				this._DbQuotationItemDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbUnit_DbSalesInvoiceItemDetail", Storage="_DbSalesInvoiceItemDetails", ThisKey="UnitId", OtherKey="UnitId")]
		public EntitySet<DbSalesInvoiceItemDetail> DbSalesInvoiceItemDetails
		{
			get
			{
				return this._DbSalesInvoiceItemDetails;
			}
			set
			{
				this._DbSalesInvoiceItemDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DbItems(DbItem entity)
		{
			this.SendPropertyChanging();
			entity.DbUnit = this;
		}
		
		private void detach_DbItems(DbItem entity)
		{
			this.SendPropertyChanging();
			entity.DbUnit = null;
		}
		
		private void attach_DbPurchaseInvoiceItemDetails(DbPurchaseInvoiceItemDetail entity)
		{
			this.SendPropertyChanging();
			entity.DbUnit = this;
		}
		
		private void detach_DbPurchaseInvoiceItemDetails(DbPurchaseInvoiceItemDetail entity)
		{
			this.SendPropertyChanging();
			entity.DbUnit = null;
		}
		
		private void attach_DbQuotationItemDetails(DbQuotationItemDetail entity)
		{
			this.SendPropertyChanging();
			entity.DbUnit = this;
		}
		
		private void detach_DbQuotationItemDetails(DbQuotationItemDetail entity)
		{
			this.SendPropertyChanging();
			entity.DbUnit = null;
		}
		
		private void attach_DbSalesInvoiceItemDetails(DbSalesInvoiceItemDetail entity)
		{
			this.SendPropertyChanging();
			entity.DbUnit = this;
		}
		
		private void detach_DbSalesInvoiceItemDetails(DbSalesInvoiceItemDetail entity)
		{
			this.SendPropertyChanging();
			entity.DbUnit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DbBankTransaction")]
	public partial class DbBankTransaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BankTransactionId;
		
		private int _BankAccountId;
		
		private System.DateTime _TransactionDate;
		
		private string _TransactionType;
		
		private System.Nullable<float> _Debit;
		
		private System.Nullable<float> _Credit;
		
		private string _Description;
		
		private EntitySet<DbCustomerLedger> _DbCustomerLedgers;
		
		private EntitySet<DbDeposit> _DbDeposits;
		
		private EntitySet<DbExpense> _DbExpenses;
		
		private EntitySet<DbSupplierLedger> _DbSupplierLedgers;
		
		private EntityRef<DbBankAccount> _DbBankAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBankTransactionIdChanging(int value);
    partial void OnBankTransactionIdChanged();
    partial void OnBankAccountIdChanging(int value);
    partial void OnBankAccountIdChanged();
    partial void OnTransactionDateChanging(System.DateTime value);
    partial void OnTransactionDateChanged();
    partial void OnTransactionTypeChanging(string value);
    partial void OnTransactionTypeChanged();
    partial void OnDebitChanging(System.Nullable<float> value);
    partial void OnDebitChanged();
    partial void OnCreditChanging(System.Nullable<float> value);
    partial void OnCreditChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public DbBankTransaction()
		{
			this._DbCustomerLedgers = new EntitySet<DbCustomerLedger>(new Action<DbCustomerLedger>(this.attach_DbCustomerLedgers), new Action<DbCustomerLedger>(this.detach_DbCustomerLedgers));
			this._DbDeposits = new EntitySet<DbDeposit>(new Action<DbDeposit>(this.attach_DbDeposits), new Action<DbDeposit>(this.detach_DbDeposits));
			this._DbExpenses = new EntitySet<DbExpense>(new Action<DbExpense>(this.attach_DbExpenses), new Action<DbExpense>(this.detach_DbExpenses));
			this._DbSupplierLedgers = new EntitySet<DbSupplierLedger>(new Action<DbSupplierLedger>(this.attach_DbSupplierLedgers), new Action<DbSupplierLedger>(this.detach_DbSupplierLedgers));
			this._DbBankAccount = default(EntityRef<DbBankAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankTransactionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BankTransactionId
		{
			get
			{
				return this._BankTransactionId;
			}
			set
			{
				if ((this._BankTransactionId != value))
				{
					this.OnBankTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._BankTransactionId = value;
					this.SendPropertyChanged("BankTransactionId");
					this.OnBankTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountId", DbType="Int NOT NULL")]
		public int BankAccountId
		{
			get
			{
				return this._BankAccountId;
			}
			set
			{
				if ((this._BankAccountId != value))
				{
					if (this._DbBankAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankAccountIdChanging(value);
					this.SendPropertyChanging();
					this._BankAccountId = value;
					this.SendPropertyChanged("BankAccountId");
					this.OnBankAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionDate", DbType="Date NOT NULL")]
		public System.DateTime TransactionDate
		{
			get
			{
				return this._TransactionDate;
			}
			set
			{
				if ((this._TransactionDate != value))
				{
					this.OnTransactionDateChanging(value);
					this.SendPropertyChanging();
					this._TransactionDate = value;
					this.SendPropertyChanged("TransactionDate");
					this.OnTransactionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TransactionType
		{
			get
			{
				return this._TransactionType;
			}
			set
			{
				if ((this._TransactionType != value))
				{
					this.OnTransactionTypeChanging(value);
					this.SendPropertyChanging();
					this._TransactionType = value;
					this.SendPropertyChanged("TransactionType");
					this.OnTransactionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Debit", DbType="Real")]
		public System.Nullable<float> Debit
		{
			get
			{
				return this._Debit;
			}
			set
			{
				if ((this._Debit != value))
				{
					this.OnDebitChanging(value);
					this.SendPropertyChanging();
					this._Debit = value;
					this.SendPropertyChanged("Debit");
					this.OnDebitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credit", DbType="Real")]
		public System.Nullable<float> Credit
		{
			get
			{
				return this._Credit;
			}
			set
			{
				if ((this._Credit != value))
				{
					this.OnCreditChanging(value);
					this.SendPropertyChanging();
					this._Credit = value;
					this.SendPropertyChanged("Credit");
					this.OnCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbBankTransaction_DbCustomerLedger", Storage="_DbCustomerLedgers", ThisKey="BankTransactionId", OtherKey="BankTransactionId")]
		public EntitySet<DbCustomerLedger> DbCustomerLedgers
		{
			get
			{
				return this._DbCustomerLedgers;
			}
			set
			{
				this._DbCustomerLedgers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbBankTransaction_DbDeposit", Storage="_DbDeposits", ThisKey="BankTransactionId", OtherKey="BankTransactionId")]
		public EntitySet<DbDeposit> DbDeposits
		{
			get
			{
				return this._DbDeposits;
			}
			set
			{
				this._DbDeposits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbBankTransaction_DbExpense", Storage="_DbExpenses", ThisKey="BankTransactionId", OtherKey="BankTransactionId")]
		public EntitySet<DbExpense> DbExpenses
		{
			get
			{
				return this._DbExpenses;
			}
			set
			{
				this._DbExpenses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbBankTransaction_DbSupplierLedger", Storage="_DbSupplierLedgers", ThisKey="BankTransactionId", OtherKey="BankTransactionId")]
		public EntitySet<DbSupplierLedger> DbSupplierLedgers
		{
			get
			{
				return this._DbSupplierLedgers;
			}
			set
			{
				this._DbSupplierLedgers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbBankAccount_DbBankTransaction", Storage="_DbBankAccount", ThisKey="BankAccountId", OtherKey="BankAccountId", IsForeignKey=true)]
		public DbBankAccount DbBankAccount
		{
			get
			{
				return this._DbBankAccount.Entity;
			}
			set
			{
				DbBankAccount previousValue = this._DbBankAccount.Entity;
				if (((previousValue != value) 
							|| (this._DbBankAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DbBankAccount.Entity = null;
						previousValue.DbBankTransactions.Remove(this);
					}
					this._DbBankAccount.Entity = value;
					if ((value != null))
					{
						value.DbBankTransactions.Add(this);
						this._BankAccountId = value.BankAccountId;
					}
					else
					{
						this._BankAccountId = default(int);
					}
					this.SendPropertyChanged("DbBankAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DbCustomerLedgers(DbCustomerLedger entity)
		{
			this.SendPropertyChanging();
			entity.DbBankTransaction = this;
		}
		
		private void detach_DbCustomerLedgers(DbCustomerLedger entity)
		{
			this.SendPropertyChanging();
			entity.DbBankTransaction = null;
		}
		
		private void attach_DbDeposits(DbDeposit entity)
		{
			this.SendPropertyChanging();
			entity.DbBankTransaction = this;
		}
		
		private void detach_DbDeposits(DbDeposit entity)
		{
			this.SendPropertyChanging();
			entity.DbBankTransaction = null;
		}
		
		private void attach_DbExpenses(DbExpense entity)
		{
			this.SendPropertyChanging();
			entity.DbBankTransaction = this;
		}
		
		private void detach_DbExpenses(DbExpense entity)
		{
			this.SendPropertyChanging();
			entity.DbBankTransaction = null;
		}
		
		private void attach_DbSupplierLedgers(DbSupplierLedger entity)
		{
			this.SendPropertyChanging();
			entity.DbBankTransaction = this;
		}
		
		private void detach_DbSupplierLedgers(DbSupplierLedger entity)
		{
			this.SendPropertyChanging();
			entity.DbBankTransaction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DbCategory")]
	public partial class DbCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CategoryId;
		
		private string _CategoryName;
		
		private EntitySet<DbItem> _DbItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    #endregion
		
		public DbCategory()
		{
			this._DbItems = new EntitySet<DbItem>(new Action<DbItem>(this.attach_DbItems), new Action<DbItem>(this.detach_DbItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbCategory_DbItem", Storage="_DbItems", ThisKey="CategoryId", OtherKey="CategoryId")]
		public EntitySet<DbItem> DbItems
		{
			get
			{
				return this._DbItems;
			}
			set
			{
				this._DbItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DbItems(DbItem entity)
		{
			this.SendPropertyChanging();
			entity.DbCategory = this;
		}
		
		private void detach_DbItems(DbItem entity)
		{
			this.SendPropertyChanging();
			entity.DbCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DbCompany")]
	public partial class DbCompany : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompanyId;
		
		private string _CompanyName;
		
		private string _LogoPath;
		
		private string _Gstin;
		
		private string _Pan;
		
		private string _Mobile;
		
		private string _Landline;
		
		private string _Email;
		
		private string _Website;
		
		private string _Address;
		
		private string _Pincode;
		
		private string _City;
		
		private string _State;
		
		private string _Password;
		
		private string _AccountNo;
		
		private string _AccountName;
		
		private string _AccountType;
		
		private string _BankName;
		
		private string _Ifsc;
		
		private string _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnLogoPathChanging(string value);
    partial void OnLogoPathChanged();
    partial void OnGstinChanging(string value);
    partial void OnGstinChanged();
    partial void OnPanChanging(string value);
    partial void OnPanChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnLandlineChanging(string value);
    partial void OnLandlineChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPincodeChanging(string value);
    partial void OnPincodeChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    partial void OnAccountNameChanging(string value);
    partial void OnAccountNameChanged();
    partial void OnAccountTypeChanging(string value);
    partial void OnAccountTypeChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnIfscChanging(string value);
    partial void OnIfscChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    #endregion
		
		public DbCompany()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoPath", DbType="VarChar(MAX)")]
		public string LogoPath
		{
			get
			{
				return this._LogoPath;
			}
			set
			{
				if ((this._LogoPath != value))
				{
					this.OnLogoPathChanging(value);
					this.SendPropertyChanging();
					this._LogoPath = value;
					this.SendPropertyChanged("LogoPath");
					this.OnLogoPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gstin", DbType="VarChar(15)")]
		public string Gstin
		{
			get
			{
				return this._Gstin;
			}
			set
			{
				if ((this._Gstin != value))
				{
					this.OnGstinChanging(value);
					this.SendPropertyChanging();
					this._Gstin = value;
					this.SendPropertyChanged("Gstin");
					this.OnGstinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pan", DbType="VarChar(10)")]
		public string Pan
		{
			get
			{
				return this._Pan;
			}
			set
			{
				if ((this._Pan != value))
				{
					this.OnPanChanging(value);
					this.SendPropertyChanging();
					this._Pan = value;
					this.SendPropertyChanged("Pan");
					this.OnPanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(10)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Landline", DbType="VarChar(12)")]
		public string Landline
		{
			get
			{
				return this._Landline;
			}
			set
			{
				if ((this._Landline != value))
				{
					this.OnLandlineChanging(value);
					this.SendPropertyChanging();
					this._Landline = value;
					this.SendPropertyChanged("Landline");
					this.OnLandlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="VarChar(100)")]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pincode", DbType="VarChar(6)")]
		public string Pincode
		{
			get
			{
				return this._Pincode;
			}
			set
			{
				if ((this._Pincode != value))
				{
					this.OnPincodeChanging(value);
					this.SendPropertyChanging();
					this._Pincode = value;
					this.SendPropertyChanged("Pincode");
					this.OnPincodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(27) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="VarChar(100)")]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="VarChar(100)")]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this.OnAccountNameChanging(value);
					this.SendPropertyChanging();
					this._AccountName = value;
					this.SendPropertyChanged("AccountName");
					this.OnAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountType", DbType="VarChar(100)")]
		public string AccountType
		{
			get
			{
				return this._AccountType;
			}
			set
			{
				if ((this._AccountType != value))
				{
					this.OnAccountTypeChanging(value);
					this.SendPropertyChanging();
					this._AccountType = value;
					this.SendPropertyChanged("AccountType");
					this.OnAccountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(100)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ifsc", DbType="VarChar(100)")]
		public string Ifsc
		{
			get
			{
				return this._Ifsc;
			}
			set
			{
				if ((this._Ifsc != value))
				{
					this.OnIfscChanging(value);
					this.SendPropertyChanging();
					this._Ifsc = value;
					this.SendPropertyChanged("Ifsc");
					this.OnIfscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(100)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DbCountry")]
	public partial class DbCountry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CountryCode;
		
		private string _CountryName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountryCodeChanging(string value);
    partial void OnCountryCodeChanged();
    partial void OnCountryNameChanging(string value);
    partial void OnCountryNameChanged();
    #endregion
		
		public DbCountry()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCode", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CountryCode
		{
			get
			{
				return this._CountryCode;
			}
			set
			{
				if ((this._CountryCode != value))
				{
					this.OnCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryCode = value;
					this.SendPropertyChanged("CountryCode");
					this.OnCountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this.OnCountryNameChanging(value);
					this.SendPropertyChanging();
					this._CountryName = value;
					this.SendPropertyChanged("CountryName");
					this.OnCountryNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DbCustomer")]
	public partial class DbCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerId;
		
		private string _CustomerName;
		
		private string _Gstin;
		
		private string _Pan;
		
		private string _Mobile;
		
		private string _Landline;
		
		private string _Email;
		
		private string _Address;
		
		private string _Pincode;
		
		private string _City;
		
		private string _State;
		
		private string _Country;
		
		private EntitySet<DbCustomerLedger> _DbCustomerLedgers;
		
		private EntitySet<DbCustomerLedger> _DbCustomerLedgers1;
		
		private EntitySet<DbQuotationHeader> _DbQuotationHeaders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnGstinChanging(string value);
    partial void OnGstinChanged();
    partial void OnPanChanging(string value);
    partial void OnPanChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnLandlineChanging(string value);
    partial void OnLandlineChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPincodeChanging(string value);
    partial void OnPincodeChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    #endregion
		
		public DbCustomer()
		{
			this._DbCustomerLedgers = new EntitySet<DbCustomerLedger>(new Action<DbCustomerLedger>(this.attach_DbCustomerLedgers), new Action<DbCustomerLedger>(this.detach_DbCustomerLedgers));
			this._DbCustomerLedgers1 = new EntitySet<DbCustomerLedger>(new Action<DbCustomerLedger>(this.attach_DbCustomerLedgers1), new Action<DbCustomerLedger>(this.detach_DbCustomerLedgers1));
			this._DbQuotationHeaders = new EntitySet<DbQuotationHeader>(new Action<DbQuotationHeader>(this.attach_DbQuotationHeaders), new Action<DbQuotationHeader>(this.detach_DbQuotationHeaders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gstin", DbType="VarChar(15)")]
		public string Gstin
		{
			get
			{
				return this._Gstin;
			}
			set
			{
				if ((this._Gstin != value))
				{
					this.OnGstinChanging(value);
					this.SendPropertyChanging();
					this._Gstin = value;
					this.SendPropertyChanged("Gstin");
					this.OnGstinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pan", DbType="VarChar(10)")]
		public string Pan
		{
			get
			{
				return this._Pan;
			}
			set
			{
				if ((this._Pan != value))
				{
					this.OnPanChanging(value);
					this.SendPropertyChanging();
					this._Pan = value;
					this.SendPropertyChanged("Pan");
					this.OnPanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(50)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Landline", DbType="VarChar(50)")]
		public string Landline
		{
			get
			{
				return this._Landline;
			}
			set
			{
				if ((this._Landline != value))
				{
					this.OnLandlineChanging(value);
					this.SendPropertyChanging();
					this._Landline = value;
					this.SendPropertyChanged("Landline");
					this.OnLandlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pincode", DbType="VarChar(50)")]
		public string Pincode
		{
			get
			{
				return this._Pincode;
			}
			set
			{
				if ((this._Pincode != value))
				{
					this.OnPincodeChanging(value);
					this.SendPropertyChanging();
					this._Pincode = value;
					this.SendPropertyChanged("Pincode");
					this.OnPincodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbCustomer_DbCustomerLedger", Storage="_DbCustomerLedgers", ThisKey="CustomerId", OtherKey="CustomerId")]
		public EntitySet<DbCustomerLedger> DbCustomerLedgers
		{
			get
			{
				return this._DbCustomerLedgers;
			}
			set
			{
				this._DbCustomerLedgers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbCustomer_DbCustomerLedger1", Storage="_DbCustomerLedgers1", ThisKey="CustomerId", OtherKey="CustomerId")]
		public EntitySet<DbCustomerLedger> DbCustomerLedgers1
		{
			get
			{
				return this._DbCustomerLedgers1;
			}
			set
			{
				this._DbCustomerLedgers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbCustomer_DbQuotationHeader", Storage="_DbQuotationHeaders", ThisKey="CustomerId", OtherKey="CustomerId")]
		public EntitySet<DbQuotationHeader> DbQuotationHeaders
		{
			get
			{
				return this._DbQuotationHeaders;
			}
			set
			{
				this._DbQuotationHeaders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DbCustomerLedgers(DbCustomerLedger entity)
		{
			this.SendPropertyChanging();
			entity.DbCustomer = this;
		}
		
		private void detach_DbCustomerLedgers(DbCustomerLedger entity)
		{
			this.SendPropertyChanging();
			entity.DbCustomer = null;
		}
		
		private void attach_DbCustomerLedgers1(DbCustomerLedger entity)
		{
			this.SendPropertyChanging();
			entity.DbCustomer1 = this;
		}
		
		private void detach_DbCustomerLedgers1(DbCustomerLedger entity)
		{
			this.SendPropertyChanging();
			entity.DbCustomer1 = null;
		}
		
		private void attach_DbQuotationHeaders(DbQuotationHeader entity)
		{
			this.SendPropertyChanging();
			entity.DbCustomer = this;
		}
		
		private void detach_DbQuotationHeaders(DbQuotationHeader entity)
		{
			this.SendPropertyChanging();
			entity.DbCustomer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DbCustomerLedger")]
	public partial class DbCustomerLedger : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerLedgerId;
		
		private int _CustomerId;
		
		private int _InvoiceNo;
		
		private string _Prefix;
		
		private System.Nullable<int> _ReceiptNo;
		
		private string _PaymentMethod;
		
		private System.DateTime _PaymentDate;
		
		private System.Nullable<int> _BankAccountId;
		
		private System.Nullable<float> _Credit;
		
		private System.Nullable<float> _Debit;
		
		private string _Note;
		
		private System.Nullable<int> _BankTransactionId;
		
		private string _Description;
		
		private EntityRef<DbBankAccount> _DbBankAccount;
		
		private EntityRef<DbBankTransaction> _DbBankTransaction;
		
		private EntityRef<DbCustomer> _DbCustomer;
		
		private EntityRef<DbCustomer> _DbCustomer1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerLedgerIdChanging(int value);
    partial void OnCustomerLedgerIdChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnInvoiceNoChanging(int value);
    partial void OnInvoiceNoChanged();
    partial void OnPrefixChanging(string value);
    partial void OnPrefixChanged();
    partial void OnReceiptNoChanging(System.Nullable<int> value);
    partial void OnReceiptNoChanged();
    partial void OnPaymentMethodChanging(string value);
    partial void OnPaymentMethodChanged();
    partial void OnPaymentDateChanging(System.DateTime value);
    partial void OnPaymentDateChanged();
    partial void OnBankAccountIdChanging(System.Nullable<int> value);
    partial void OnBankAccountIdChanged();
    partial void OnCreditChanging(System.Nullable<float> value);
    partial void OnCreditChanged();
    partial void OnDebitChanging(System.Nullable<float> value);
    partial void OnDebitChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnBankTransactionIdChanging(System.Nullable<int> value);
    partial void OnBankTransactionIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public DbCustomerLedger()
		{
			this._DbBankAccount = default(EntityRef<DbBankAccount>);
			this._DbBankTransaction = default(EntityRef<DbBankTransaction>);
			this._DbCustomer = default(EntityRef<DbCustomer>);
			this._DbCustomer1 = default(EntityRef<DbCustomer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerLedgerId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CustomerLedgerId
		{
			get
			{
				return this._CustomerLedgerId;
			}
			set
			{
				if ((this._CustomerLedgerId != value))
				{
					this.OnCustomerLedgerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerLedgerId = value;
					this.SendPropertyChanged("CustomerLedgerId");
					this.OnCustomerLedgerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if ((this._DbCustomer.HasLoadedOrAssignedValue || this._DbCustomer1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="Int NOT NULL")]
		public int InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prefix", DbType="VarChar(10)")]
		public string Prefix
		{
			get
			{
				return this._Prefix;
			}
			set
			{
				if ((this._Prefix != value))
				{
					this.OnPrefixChanging(value);
					this.SendPropertyChanging();
					this._Prefix = value;
					this.SendPropertyChanged("Prefix");
					this.OnPrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptNo", DbType="Int")]
		public System.Nullable<int> ReceiptNo
		{
			get
			{
				return this._ReceiptNo;
			}
			set
			{
				if ((this._ReceiptNo != value))
				{
					this.OnReceiptNoChanging(value);
					this.SendPropertyChanging();
					this._ReceiptNo = value;
					this.SendPropertyChanged("ReceiptNo");
					this.OnReceiptNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMethod", DbType="VarChar(50)")]
		public string PaymentMethod
		{
			get
			{
				return this._PaymentMethod;
			}
			set
			{
				if ((this._PaymentMethod != value))
				{
					this.OnPaymentMethodChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethod = value;
					this.SendPropertyChanged("PaymentMethod");
					this.OnPaymentMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="Date NOT NULL")]
		public System.DateTime PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountId", DbType="Int")]
		public System.Nullable<int> BankAccountId
		{
			get
			{
				return this._BankAccountId;
			}
			set
			{
				if ((this._BankAccountId != value))
				{
					if (this._DbBankAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankAccountIdChanging(value);
					this.SendPropertyChanging();
					this._BankAccountId = value;
					this.SendPropertyChanged("BankAccountId");
					this.OnBankAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credit", DbType="Real")]
		public System.Nullable<float> Credit
		{
			get
			{
				return this._Credit;
			}
			set
			{
				if ((this._Credit != value))
				{
					this.OnCreditChanging(value);
					this.SendPropertyChanging();
					this._Credit = value;
					this.SendPropertyChanged("Credit");
					this.OnCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Debit", DbType="Real")]
		public System.Nullable<float> Debit
		{
			get
			{
				return this._Debit;
			}
			set
			{
				if ((this._Debit != value))
				{
					this.OnDebitChanging(value);
					this.SendPropertyChanging();
					this._Debit = value;
					this.SendPropertyChanged("Debit");
					this.OnDebitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="VarChar(50)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankTransactionId", DbType="Int")]
		public System.Nullable<int> BankTransactionId
		{
			get
			{
				return this._BankTransactionId;
			}
			set
			{
				if ((this._BankTransactionId != value))
				{
					if (this._DbBankTransaction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._BankTransactionId = value;
					this.SendPropertyChanged("BankTransactionId");
					this.OnBankTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbBankAccount_DbCustomerLedger", Storage="_DbBankAccount", ThisKey="BankAccountId", OtherKey="BankAccountId", IsForeignKey=true)]
		public DbBankAccount DbBankAccount
		{
			get
			{
				return this._DbBankAccount.Entity;
			}
			set
			{
				DbBankAccount previousValue = this._DbBankAccount.Entity;
				if (((previousValue != value) 
							|| (this._DbBankAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DbBankAccount.Entity = null;
						previousValue.DbCustomerLedgers.Remove(this);
					}
					this._DbBankAccount.Entity = value;
					if ((value != null))
					{
						value.DbCustomerLedgers.Add(this);
						this._BankAccountId = value.BankAccountId;
					}
					else
					{
						this._BankAccountId = default(Nullable<int>);
					}
					this.SendPropertyChanged("DbBankAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbBankTransaction_DbCustomerLedger", Storage="_DbBankTransaction", ThisKey="BankTransactionId", OtherKey="BankTransactionId", IsForeignKey=true)]
		public DbBankTransaction DbBankTransaction
		{
			get
			{
				return this._DbBankTransaction.Entity;
			}
			set
			{
				DbBankTransaction previousValue = this._DbBankTransaction.Entity;
				if (((previousValue != value) 
							|| (this._DbBankTransaction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DbBankTransaction.Entity = null;
						previousValue.DbCustomerLedgers.Remove(this);
					}
					this._DbBankTransaction.Entity = value;
					if ((value != null))
					{
						value.DbCustomerLedgers.Add(this);
						this._BankTransactionId = value.BankTransactionId;
					}
					else
					{
						this._BankTransactionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("DbBankTransaction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbCustomer_DbCustomerLedger", Storage="_DbCustomer", ThisKey="CustomerId", OtherKey="CustomerId", IsForeignKey=true)]
		public DbCustomer DbCustomer
		{
			get
			{
				return this._DbCustomer.Entity;
			}
			set
			{
				DbCustomer previousValue = this._DbCustomer.Entity;
				if (((previousValue != value) 
							|| (this._DbCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DbCustomer.Entity = null;
						previousValue.DbCustomerLedgers.Remove(this);
					}
					this._DbCustomer.Entity = value;
					if ((value != null))
					{
						value.DbCustomerLedgers.Add(this);
						this._CustomerId = value.CustomerId;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("DbCustomer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbCustomer_DbCustomerLedger1", Storage="_DbCustomer1", ThisKey="CustomerId", OtherKey="CustomerId", IsForeignKey=true)]
		public DbCustomer DbCustomer1
		{
			get
			{
				return this._DbCustomer1.Entity;
			}
			set
			{
				DbCustomer previousValue = this._DbCustomer1.Entity;
				if (((previousValue != value) 
							|| (this._DbCustomer1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DbCustomer1.Entity = null;
						previousValue.DbCustomerLedgers1.Remove(this);
					}
					this._DbCustomer1.Entity = value;
					if ((value != null))
					{
						value.DbCustomerLedgers1.Add(this);
						this._CustomerId = value.CustomerId;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("DbCustomer1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DbDeposit")]
	public partial class DbDeposit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DepositId;
		
		private System.DateTime _DepositDate;
		
		private int _BankAccountId;
		
		private string _PaymentMethod;
		
		private string _Purpose;
		
		private float _Amount;
		
		private string _Note;
		
		private int _BankTransactionId;
		
		private EntityRef<DbBankAccount> _DbBankAccount;
		
		private EntityRef<DbBankTransaction> _DbBankTransaction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepositIdChanging(int value);
    partial void OnDepositIdChanged();
    partial void OnDepositDateChanging(System.DateTime value);
    partial void OnDepositDateChanged();
    partial void OnBankAccountIdChanging(int value);
    partial void OnBankAccountIdChanged();
    partial void OnPaymentMethodChanging(string value);
    partial void OnPaymentMethodChanged();
    partial void OnPurposeChanging(string value);
    partial void OnPurposeChanged();
    partial void OnAmountChanging(float value);
    partial void OnAmountChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnBankTransactionIdChanging(int value);
    partial void OnBankTransactionIdChanged();
    #endregion
		
		public DbDeposit()
		{
			this._DbBankAccount = default(EntityRef<DbBankAccount>);
			this._DbBankTransaction = default(EntityRef<DbBankTransaction>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepositId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DepositId
		{
			get
			{
				return this._DepositId;
			}
			set
			{
				if ((this._DepositId != value))
				{
					this.OnDepositIdChanging(value);
					this.SendPropertyChanging();
					this._DepositId = value;
					this.SendPropertyChanged("DepositId");
					this.OnDepositIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepositDate", DbType="Date NOT NULL")]
		public System.DateTime DepositDate
		{
			get
			{
				return this._DepositDate;
			}
			set
			{
				if ((this._DepositDate != value))
				{
					this.OnDepositDateChanging(value);
					this.SendPropertyChanging();
					this._DepositDate = value;
					this.SendPropertyChanged("DepositDate");
					this.OnDepositDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountId", DbType="Int NOT NULL")]
		public int BankAccountId
		{
			get
			{
				return this._BankAccountId;
			}
			set
			{
				if ((this._BankAccountId != value))
				{
					if (this._DbBankAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankAccountIdChanging(value);
					this.SendPropertyChanging();
					this._BankAccountId = value;
					this.SendPropertyChanged("BankAccountId");
					this.OnBankAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMethod", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PaymentMethod
		{
			get
			{
				return this._PaymentMethod;
			}
			set
			{
				if ((this._PaymentMethod != value))
				{
					this.OnPaymentMethodChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethod = value;
					this.SendPropertyChanged("PaymentMethod");
					this.OnPaymentMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Purpose", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Purpose
		{
			get
			{
				return this._Purpose;
			}
			set
			{
				if ((this._Purpose != value))
				{
					this.OnPurposeChanging(value);
					this.SendPropertyChanging();
					this._Purpose = value;
					this.SendPropertyChanged("Purpose");
					this.OnPurposeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Real NOT NULL")]
		public float Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="VarChar(50)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankTransactionId", DbType="Int NOT NULL")]
		public int BankTransactionId
		{
			get
			{
				return this._BankTransactionId;
			}
			set
			{
				if ((this._BankTransactionId != value))
				{
					if (this._DbBankTransaction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._BankTransactionId = value;
					this.SendPropertyChanged("BankTransactionId");
					this.OnBankTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbBankAccount_DbDeposit", Storage="_DbBankAccount", ThisKey="BankAccountId", OtherKey="BankAccountId", IsForeignKey=true)]
		public DbBankAccount DbBankAccount
		{
			get
			{
				return this._DbBankAccount.Entity;
			}
			set
			{
				DbBankAccount previousValue = this._DbBankAccount.Entity;
				if (((previousValue != value) 
							|| (this._DbBankAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DbBankAccount.Entity = null;
						previousValue.DbDeposits.Remove(this);
					}
					this._DbBankAccount.Entity = value;
					if ((value != null))
					{
						value.DbDeposits.Add(this);
						this._BankAccountId = value.BankAccountId;
					}
					else
					{
						this._BankAccountId = default(int);
					}
					this.SendPropertyChanged("DbBankAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbBankTransaction_DbDeposit", Storage="_DbBankTransaction", ThisKey="BankTransactionId", OtherKey="BankTransactionId", IsForeignKey=true)]
		public DbBankTransaction DbBankTransaction
		{
			get
			{
				return this._DbBankTransaction.Entity;
			}
			set
			{
				DbBankTransaction previousValue = this._DbBankTransaction.Entity;
				if (((previousValue != value) 
							|| (this._DbBankTransaction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DbBankTransaction.Entity = null;
						previousValue.DbDeposits.Remove(this);
					}
					this._DbBankTransaction.Entity = value;
					if ((value != null))
					{
						value.DbDeposits.Add(this);
						this._BankTransactionId = value.BankTransactionId;
					}
					else
					{
						this._BankTransactionId = default(int);
					}
					this.SendPropertyChanged("DbBankTransaction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DbExpense")]
	public partial class DbExpense : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExpenseId;
		
		private System.DateTime _ExpenseDate;
		
		private int _BankAccountId;
		
		private string _PaymentMethod;
		
		private string _Purpose;
		
		private float _Amount;
		
		private string _Note;
		
		private int _BankTransactionId;
		
		private EntityRef<DbBankAccount> _DbBankAccount;
		
		private EntityRef<DbBankTransaction> _DbBankTransaction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExpenseIdChanging(int value);
    partial void OnExpenseIdChanged();
    partial void OnExpenseDateChanging(System.DateTime value);
    partial void OnExpenseDateChanged();
    partial void OnBankAccountIdChanging(int value);
    partial void OnBankAccountIdChanged();
    partial void OnPaymentMethodChanging(string value);
    partial void OnPaymentMethodChanged();
    partial void OnPurposeChanging(string value);
    partial void OnPurposeChanged();
    partial void OnAmountChanging(float value);
    partial void OnAmountChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnBankTransactionIdChanging(int value);
    partial void OnBankTransactionIdChanged();
    #endregion
		
		public DbExpense()
		{
			this._DbBankAccount = default(EntityRef<DbBankAccount>);
			this._DbBankTransaction = default(EntityRef<DbBankTransaction>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpenseId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExpenseId
		{
			get
			{
				return this._ExpenseId;
			}
			set
			{
				if ((this._ExpenseId != value))
				{
					this.OnExpenseIdChanging(value);
					this.SendPropertyChanging();
					this._ExpenseId = value;
					this.SendPropertyChanged("ExpenseId");
					this.OnExpenseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpenseDate", DbType="Date NOT NULL")]
		public System.DateTime ExpenseDate
		{
			get
			{
				return this._ExpenseDate;
			}
			set
			{
				if ((this._ExpenseDate != value))
				{
					this.OnExpenseDateChanging(value);
					this.SendPropertyChanging();
					this._ExpenseDate = value;
					this.SendPropertyChanged("ExpenseDate");
					this.OnExpenseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountId", DbType="Int NOT NULL")]
		public int BankAccountId
		{
			get
			{
				return this._BankAccountId;
			}
			set
			{
				if ((this._BankAccountId != value))
				{
					if (this._DbBankAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankAccountIdChanging(value);
					this.SendPropertyChanging();
					this._BankAccountId = value;
					this.SendPropertyChanged("BankAccountId");
					this.OnBankAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMethod", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PaymentMethod
		{
			get
			{
				return this._PaymentMethod;
			}
			set
			{
				if ((this._PaymentMethod != value))
				{
					this.OnPaymentMethodChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethod = value;
					this.SendPropertyChanged("PaymentMethod");
					this.OnPaymentMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Purpose", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Purpose
		{
			get
			{
				return this._Purpose;
			}
			set
			{
				if ((this._Purpose != value))
				{
					this.OnPurposeChanging(value);
					this.SendPropertyChanging();
					this._Purpose = value;
					this.SendPropertyChanged("Purpose");
					this.OnPurposeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Real NOT NULL")]
		public float Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="VarChar(50)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankTransactionId", DbType="Int NOT NULL")]
		public int BankTransactionId
		{
			get
			{
				return this._BankTransactionId;
			}
			set
			{
				if ((this._BankTransactionId != value))
				{
					if (this._DbBankTransaction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._BankTransactionId = value;
					this.SendPropertyChanged("BankTransactionId");
					this.OnBankTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbBankAccount_DbExpense", Storage="_DbBankAccount", ThisKey="BankAccountId", OtherKey="BankAccountId", IsForeignKey=true)]
		public DbBankAccount DbBankAccount
		{
			get
			{
				return this._DbBankAccount.Entity;
			}
			set
			{
				DbBankAccount previousValue = this._DbBankAccount.Entity;
				if (((previousValue != value) 
							|| (this._DbBankAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DbBankAccount.Entity = null;
						previousValue.DbExpenses.Remove(this);
					}
					this._DbBankAccount.Entity = value;
					if ((value != null))
					{
						value.DbExpenses.Add(this);
						this._BankAccountId = value.BankAccountId;
					}
					else
					{
						this._BankAccountId = default(int);
					}
					this.SendPropertyChanged("DbBankAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbBankTransaction_DbExpense", Storage="_DbBankTransaction", ThisKey="BankTransactionId", OtherKey="BankTransactionId", IsForeignKey=true)]
		public DbBankTransaction DbBankTransaction
		{
			get
			{
				return this._DbBankTransaction.Entity;
			}
			set
			{
				DbBankTransaction previousValue = this._DbBankTransaction.Entity;
				if (((previousValue != value) 
							|| (this._DbBankTransaction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DbBankTransaction.Entity = null;
						previousValue.DbExpenses.Remove(this);
					}
					this._DbBankTransaction.Entity = value;
					if ((value != null))
					{
						value.DbExpenses.Add(this);
						this._BankTransactionId = value.BankTransactionId;
					}
					else
					{
						this._BankTransactionId = default(int);
					}
					this.SendPropertyChanged("DbBankTransaction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DbItem")]
	public partial class DbItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ItemCode;
		
		private string _ItemName;
		
		private string _ItemDescription;
		
		private string _HsnSac;
		
		private float _TaxRate;
		
		private float _Cess;
		
		private float _PurchasePrice;
		
		private bool _PurchasePriceInclusiveTax;
		
		private float _SalesPrice;
		
		private bool _SalesPriceInclusiveTax;
		
		private int _CategoryId;
		
		private int _UnitId;
		
		private float _StockQuantity;
		
		private float _AlertQuantity;
		
		private EntitySet<DbPurchaseInvoiceItemDetail> _DbPurchaseInvoiceItemDetails;
		
		private EntitySet<DbQuotationItemDetail> _DbQuotationItemDetails;
		
		private EntitySet<DbSalesInvoiceItemDetail> _DbSalesInvoiceItemDetails;
		
		private EntityRef<DbCategory> _DbCategory;
		
		private EntityRef<DbUnit> _DbUnit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemCodeChanging(string value);
    partial void OnItemCodeChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    partial void OnItemDescriptionChanging(string value);
    partial void OnItemDescriptionChanged();
    partial void OnHsnSacChanging(string value);
    partial void OnHsnSacChanged();
    partial void OnTaxRateChanging(float value);
    partial void OnTaxRateChanged();
    partial void OnCessChanging(float value);
    partial void OnCessChanged();
    partial void OnPurchasePriceChanging(float value);
    partial void OnPurchasePriceChanged();
    partial void OnPurchasePriceInclusiveTaxChanging(bool value);
    partial void OnPurchasePriceInclusiveTaxChanged();
    partial void OnSalesPriceChanging(float value);
    partial void OnSalesPriceChanged();
    partial void OnSalesPriceInclusiveTaxChanging(bool value);
    partial void OnSalesPriceInclusiveTaxChanged();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnStockQuantityChanging(float value);
    partial void OnStockQuantityChanged();
    partial void OnAlertQuantityChanging(float value);
    partial void OnAlertQuantityChanged();
    #endregion
		
		public DbItem()
		{
			this._DbPurchaseInvoiceItemDetails = new EntitySet<DbPurchaseInvoiceItemDetail>(new Action<DbPurchaseInvoiceItemDetail>(this.attach_DbPurchaseInvoiceItemDetails), new Action<DbPurchaseInvoiceItemDetail>(this.detach_DbPurchaseInvoiceItemDetails));
			this._DbQuotationItemDetails = new EntitySet<DbQuotationItemDetail>(new Action<DbQuotationItemDetail>(this.attach_DbQuotationItemDetails), new Action<DbQuotationItemDetail>(this.detach_DbQuotationItemDetails));
			this._DbSalesInvoiceItemDetails = new EntitySet<DbSalesInvoiceItemDetail>(new Action<DbSalesInvoiceItemDetail>(this.attach_DbSalesInvoiceItemDetails), new Action<DbSalesInvoiceItemDetail>(this.detach_DbSalesInvoiceItemDetails));
			this._DbCategory = default(EntityRef<DbCategory>);
			this._DbUnit = default(EntityRef<DbUnit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCode", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this.OnItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemCode = value;
					this.SendPropertyChanged("ItemCode");
					this.OnItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this.OnItemNameChanging(value);
					this.SendPropertyChanging();
					this._ItemName = value;
					this.SendPropertyChanged("ItemName");
					this.OnItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemDescription", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ItemDescription
		{
			get
			{
				return this._ItemDescription;
			}
			set
			{
				if ((this._ItemDescription != value))
				{
					this.OnItemDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ItemDescription = value;
					this.SendPropertyChanged("ItemDescription");
					this.OnItemDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HsnSac", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string HsnSac
		{
			get
			{
				return this._HsnSac;
			}
			set
			{
				if ((this._HsnSac != value))
				{
					this.OnHsnSacChanging(value);
					this.SendPropertyChanging();
					this._HsnSac = value;
					this.SendPropertyChanged("HsnSac");
					this.OnHsnSacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxRate", DbType="Real NOT NULL")]
		public float TaxRate
		{
			get
			{
				return this._TaxRate;
			}
			set
			{
				if ((this._TaxRate != value))
				{
					this.OnTaxRateChanging(value);
					this.SendPropertyChanging();
					this._TaxRate = value;
					this.SendPropertyChanged("TaxRate");
					this.OnTaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cess", DbType="Real NOT NULL")]
		public float Cess
		{
			get
			{
				return this._Cess;
			}
			set
			{
				if ((this._Cess != value))
				{
					this.OnCessChanging(value);
					this.SendPropertyChanging();
					this._Cess = value;
					this.SendPropertyChanged("Cess");
					this.OnCessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchasePrice", DbType="Real NOT NULL")]
		public float PurchasePrice
		{
			get
			{
				return this._PurchasePrice;
			}
			set
			{
				if ((this._PurchasePrice != value))
				{
					this.OnPurchasePriceChanging(value);
					this.SendPropertyChanging();
					this._PurchasePrice = value;
					this.SendPropertyChanged("PurchasePrice");
					this.OnPurchasePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchasePriceInclusiveTax", DbType="Bit NOT NULL")]
		public bool PurchasePriceInclusiveTax
		{
			get
			{
				return this._PurchasePriceInclusiveTax;
			}
			set
			{
				if ((this._PurchasePriceInclusiveTax != value))
				{
					this.OnPurchasePriceInclusiveTaxChanging(value);
					this.SendPropertyChanging();
					this._PurchasePriceInclusiveTax = value;
					this.SendPropertyChanged("PurchasePriceInclusiveTax");
					this.OnPurchasePriceInclusiveTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesPrice", DbType="Real NOT NULL")]
		public float SalesPrice
		{
			get
			{
				return this._SalesPrice;
			}
			set
			{
				if ((this._SalesPrice != value))
				{
					this.OnSalesPriceChanging(value);
					this.SendPropertyChanging();
					this._SalesPrice = value;
					this.SendPropertyChanged("SalesPrice");
					this.OnSalesPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesPriceInclusiveTax", DbType="Bit NOT NULL")]
		public bool SalesPriceInclusiveTax
		{
			get
			{
				return this._SalesPriceInclusiveTax;
			}
			set
			{
				if ((this._SalesPriceInclusiveTax != value))
				{
					this.OnSalesPriceInclusiveTaxChanging(value);
					this.SendPropertyChanging();
					this._SalesPriceInclusiveTax = value;
					this.SendPropertyChanged("SalesPriceInclusiveTax");
					this.OnSalesPriceInclusiveTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int NOT NULL")]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._DbCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._DbUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockQuantity", DbType="Real NOT NULL")]
		public float StockQuantity
		{
			get
			{
				return this._StockQuantity;
			}
			set
			{
				if ((this._StockQuantity != value))
				{
					this.OnStockQuantityChanging(value);
					this.SendPropertyChanging();
					this._StockQuantity = value;
					this.SendPropertyChanged("StockQuantity");
					this.OnStockQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlertQuantity", DbType="Real NOT NULL")]
		public float AlertQuantity
		{
			get
			{
				return this._AlertQuantity;
			}
			set
			{
				if ((this._AlertQuantity != value))
				{
					this.OnAlertQuantityChanging(value);
					this.SendPropertyChanging();
					this._AlertQuantity = value;
					this.SendPropertyChanged("AlertQuantity");
					this.OnAlertQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbItem_DbPurchaseInvoiceItemDetail", Storage="_DbPurchaseInvoiceItemDetails", ThisKey="ItemCode", OtherKey="ItemCode")]
		public EntitySet<DbPurchaseInvoiceItemDetail> DbPurchaseInvoiceItemDetails
		{
			get
			{
				return this._DbPurchaseInvoiceItemDetails;
			}
			set
			{
				this._DbPurchaseInvoiceItemDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbItem_DbQuotationItemDetail", Storage="_DbQuotationItemDetails", ThisKey="ItemCode", OtherKey="ItemCode")]
		public EntitySet<DbQuotationItemDetail> DbQuotationItemDetails
		{
			get
			{
				return this._DbQuotationItemDetails;
			}
			set
			{
				this._DbQuotationItemDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbItem_DbSalesInvoiceItemDetail", Storage="_DbSalesInvoiceItemDetails", ThisKey="ItemCode", OtherKey="ItemCode")]
		public EntitySet<DbSalesInvoiceItemDetail> DbSalesInvoiceItemDetails
		{
			get
			{
				return this._DbSalesInvoiceItemDetails;
			}
			set
			{
				this._DbSalesInvoiceItemDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbCategory_DbItem", Storage="_DbCategory", ThisKey="CategoryId", OtherKey="CategoryId", IsForeignKey=true)]
		public DbCategory DbCategory
		{
			get
			{
				return this._DbCategory.Entity;
			}
			set
			{
				DbCategory previousValue = this._DbCategory.Entity;
				if (((previousValue != value) 
							|| (this._DbCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DbCategory.Entity = null;
						previousValue.DbItems.Remove(this);
					}
					this._DbCategory.Entity = value;
					if ((value != null))
					{
						value.DbItems.Add(this);
						this._CategoryId = value.CategoryId;
					}
					else
					{
						this._CategoryId = default(int);
					}
					this.SendPropertyChanged("DbCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbUnit_DbItem", Storage="_DbUnit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public DbUnit DbUnit
		{
			get
			{
				return this._DbUnit.Entity;
			}
			set
			{
				DbUnit previousValue = this._DbUnit.Entity;
				if (((previousValue != value) 
							|| (this._DbUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DbUnit.Entity = null;
						previousValue.DbItems.Remove(this);
					}
					this._DbUnit.Entity = value;
					if ((value != null))
					{
						value.DbItems.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("DbUnit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DbPurchaseInvoiceItemDetails(DbPurchaseInvoiceItemDetail entity)
		{
			this.SendPropertyChanging();
			entity.DbItem = this;
		}
		
		private void detach_DbPurchaseInvoiceItemDetails(DbPurchaseInvoiceItemDetail entity)
		{
			this.SendPropertyChanging();
			entity.DbItem = null;
		}
		
		private void attach_DbQuotationItemDetails(DbQuotationItemDetail entity)
		{
			this.SendPropertyChanging();
			entity.DbItem = this;
		}
		
		private void detach_DbQuotationItemDetails(DbQuotationItemDetail entity)
		{
			this.SendPropertyChanging();
			entity.DbItem = null;
		}
		
		private void attach_DbSalesInvoiceItemDetails(DbSalesInvoiceItemDetail entity)
		{
			this.SendPropertyChanging();
			entity.DbItem = this;
		}
		
		private void detach_DbSalesInvoiceItemDetails(DbSalesInvoiceItemDetail entity)
		{
			this.SendPropertyChanging();
			entity.DbItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DbPaymentMethod")]
	public partial class DbPaymentMethod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PaymentMethodId;
		
		private string _PaymentMethodName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentMethodIdChanging(int value);
    partial void OnPaymentMethodIdChanged();
    partial void OnPaymentMethodNameChanging(string value);
    partial void OnPaymentMethodNameChanged();
    #endregion
		
		public DbPaymentMethod()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMethodId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PaymentMethodId
		{
			get
			{
				return this._PaymentMethodId;
			}
			set
			{
				if ((this._PaymentMethodId != value))
				{
					this.OnPaymentMethodIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethodId = value;
					this.SendPropertyChanged("PaymentMethodId");
					this.OnPaymentMethodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMethodName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PaymentMethodName
		{
			get
			{
				return this._PaymentMethodName;
			}
			set
			{
				if ((this._PaymentMethodName != value))
				{
					this.OnPaymentMethodNameChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethodName = value;
					this.SendPropertyChanged("PaymentMethodName");
					this.OnPaymentMethodNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DbPaymentTerm")]
	public partial class DbPaymentTerm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PaymentTermId;
		
		private string _PaymentTermName;
		
		private int _DueDays;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentTermIdChanging(int value);
    partial void OnPaymentTermIdChanged();
    partial void OnPaymentTermNameChanging(string value);
    partial void OnPaymentTermNameChanged();
    partial void OnDueDaysChanging(int value);
    partial void OnDueDaysChanged();
    #endregion
		
		public DbPaymentTerm()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTermId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PaymentTermId
		{
			get
			{
				return this._PaymentTermId;
			}
			set
			{
				if ((this._PaymentTermId != value))
				{
					this.OnPaymentTermIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentTermId = value;
					this.SendPropertyChanged("PaymentTermId");
					this.OnPaymentTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTermName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PaymentTermName
		{
			get
			{
				return this._PaymentTermName;
			}
			set
			{
				if ((this._PaymentTermName != value))
				{
					this.OnPaymentTermNameChanging(value);
					this.SendPropertyChanging();
					this._PaymentTermName = value;
					this.SendPropertyChanged("PaymentTermName");
					this.OnPaymentTermNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDays", DbType="Int NOT NULL")]
		public int DueDays
		{
			get
			{
				return this._DueDays;
			}
			set
			{
				if ((this._DueDays != value))
				{
					this.OnDueDaysChanging(value);
					this.SendPropertyChanging();
					this._DueDays = value;
					this.SendPropertyChanged("DueDays");
					this.OnDueDaysChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DbPurchaseInvoiceHeader")]
	public partial class DbPurchaseInvoiceHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceNo;
		
		private string _Prefix;
		
		private string _InvoiceName;
		
		private System.DateTime _InvoiceDate;
		
		private int _SupplierId;
		
		private string _PlaceOfSupply;
		
		private bool _ReverseCharge;
		
		private bool _DiscountOnAll;
		
		private float _TotalDiscount;
		
		private string _DeliveryNote;
		
		private System.Nullable<System.DateTime> _DeliveryNoteDate;
		
		private string _PaymentMethod;
		
		private string _PaymentTerm;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		private string _SupplierReference;
		
		private string _OtherReference;
		
		private string _PoNo;
		
		private System.Nullable<System.DateTime> _PoDate;
		
		private string _DespatchDocumentNo;
		
		private string _DespatchedThrough;
		
		private float _TotalValue;
		
		private float _TotalDiscountRs;
		
		private float _TotalTaxableValue;
		
		private float _TotalCgstAmount;
		
		private float _TotalSgstAmount;
		
		private float _TotalIgstAmount;
		
		private float _TotalTaxValue;
		
		private float _TotalCessRs;
		
		private bool _RoundOff;
		
		private float _RoundOffValue;
		
		private float _Total;
		
		private string _Terms;
		
		private float _Paid;
		
		private float _Balance;
		
		private string _Status;
		
		private EntitySet<DbPurchaseInvoiceHsnSacDetail> _DbPurchaseInvoiceHsnSacDetails;
		
		private EntitySet<DbSupplierLedger> _DbSupplierLedgers;
		
		private EntityRef<DbSupplier> _DbSupplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceNoChanging(int value);
    partial void OnInvoiceNoChanged();
    partial void OnPrefixChanging(string value);
    partial void OnPrefixChanged();
    partial void OnInvoiceNameChanging(string value);
    partial void OnInvoiceNameChanged();
    partial void OnInvoiceDateChanging(System.DateTime value);
    partial void OnInvoiceDateChanged();
    partial void OnSupplierIdChanging(int value);
    partial void OnSupplierIdChanged();
    partial void OnPlaceOfSupplyChanging(string value);
    partial void OnPlaceOfSupplyChanged();
    partial void OnReverseChargeChanging(bool value);
    partial void OnReverseChargeChanged();
    partial void OnDiscountOnAllChanging(bool value);
    partial void OnDiscountOnAllChanged();
    partial void OnTotalDiscountChanging(float value);
    partial void OnTotalDiscountChanged();
    partial void OnDeliveryNoteChanging(string value);
    partial void OnDeliveryNoteChanged();
    partial void OnDeliveryNoteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeliveryNoteDateChanged();
    partial void OnPaymentMethodChanging(string value);
    partial void OnPaymentMethodChanged();
    partial void OnPaymentTermChanging(string value);
    partial void OnPaymentTermChanged();
    partial void OnDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDueDateChanged();
    partial void OnSupplierReferenceChanging(string value);
    partial void OnSupplierReferenceChanged();
    partial void OnOtherReferenceChanging(string value);
    partial void OnOtherReferenceChanged();
    partial void OnPoNoChanging(string value);
    partial void OnPoNoChanged();
    partial void OnPoDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPoDateChanged();
    partial void OnDespatchDocumentNoChanging(string value);
    partial void OnDespatchDocumentNoChanged();
    partial void OnDespatchedThroughChanging(string value);
    partial void OnDespatchedThroughChanged();
    partial void OnTotalValueChanging(float value);
    partial void OnTotalValueChanged();
    partial void OnTotalDiscountRsChanging(float value);
    partial void OnTotalDiscountRsChanged();
    partial void OnTotalTaxableValueChanging(float value);
    partial void OnTotalTaxableValueChanged();
    partial void OnTotalCgstAmountChanging(float value);
    partial void OnTotalCgstAmountChanged();
    partial void OnTotalSgstAmountChanging(float value);
    partial void OnTotalSgstAmountChanged();
    partial void OnTotalIgstAmountChanging(float value);
    partial void OnTotalIgstAmountChanged();
    partial void OnTotalTaxValueChanging(float value);
    partial void OnTotalTaxValueChanged();
    partial void OnTotalCessRsChanging(float value);
    partial void OnTotalCessRsChanged();
    partial void OnRoundOffChanging(bool value);
    partial void OnRoundOffChanged();
    partial void OnRoundOffValueChanging(float value);
    partial void OnRoundOffValueChanged();
    partial void OnTotalChanging(float value);
    partial void OnTotalChanged();
    partial void OnTermsChanging(string value);
    partial void OnTermsChanged();
    partial void OnPaidChanging(float value);
    partial void OnPaidChanged();
    partial void OnBalanceChanging(float value);
    partial void OnBalanceChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public DbPurchaseInvoiceHeader()
		{
			this._DbPurchaseInvoiceHsnSacDetails = new EntitySet<DbPurchaseInvoiceHsnSacDetail>(new Action<DbPurchaseInvoiceHsnSacDetail>(this.attach_DbPurchaseInvoiceHsnSacDetails), new Action<DbPurchaseInvoiceHsnSacDetail>(this.detach_DbPurchaseInvoiceHsnSacDetails));
			this._DbSupplierLedgers = new EntitySet<DbSupplierLedger>(new Action<DbSupplierLedger>(this.attach_DbSupplierLedgers), new Action<DbSupplierLedger>(this.detach_DbSupplierLedgers));
			this._DbSupplier = default(EntityRef<DbSupplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prefix", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Prefix
		{
			get
			{
				return this._Prefix;
			}
			set
			{
				if ((this._Prefix != value))
				{
					this.OnPrefixChanging(value);
					this.SendPropertyChanging();
					this._Prefix = value;
					this.SendPropertyChanged("Prefix");
					this.OnPrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceName", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string InvoiceName
		{
			get
			{
				return this._InvoiceName;
			}
			set
			{
				if ((this._InvoiceName != value))
				{
					this.OnInvoiceNameChanging(value);
					this.SendPropertyChanging();
					this._InvoiceName = value;
					this.SendPropertyChanged("InvoiceName");
					this.OnInvoiceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="Date NOT NULL")]
		public System.DateTime InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					if (this._DbSupplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceOfSupply", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string PlaceOfSupply
		{
			get
			{
				return this._PlaceOfSupply;
			}
			set
			{
				if ((this._PlaceOfSupply != value))
				{
					this.OnPlaceOfSupplyChanging(value);
					this.SendPropertyChanging();
					this._PlaceOfSupply = value;
					this.SendPropertyChanged("PlaceOfSupply");
					this.OnPlaceOfSupplyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReverseCharge", DbType="Bit NOT NULL")]
		public bool ReverseCharge
		{
			get
			{
				return this._ReverseCharge;
			}
			set
			{
				if ((this._ReverseCharge != value))
				{
					this.OnReverseChargeChanging(value);
					this.SendPropertyChanging();
					this._ReverseCharge = value;
					this.SendPropertyChanged("ReverseCharge");
					this.OnReverseChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountOnAll", DbType="Bit NOT NULL")]
		public bool DiscountOnAll
		{
			get
			{
				return this._DiscountOnAll;
			}
			set
			{
				if ((this._DiscountOnAll != value))
				{
					this.OnDiscountOnAllChanging(value);
					this.SendPropertyChanging();
					this._DiscountOnAll = value;
					this.SendPropertyChanged("DiscountOnAll");
					this.OnDiscountOnAllChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscount", DbType="Real NOT NULL")]
		public float TotalDiscount
		{
			get
			{
				return this._TotalDiscount;
			}
			set
			{
				if ((this._TotalDiscount != value))
				{
					this.OnTotalDiscountChanging(value);
					this.SendPropertyChanging();
					this._TotalDiscount = value;
					this.SendPropertyChanged("TotalDiscount");
					this.OnTotalDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryNote", DbType="VarChar(25)")]
		public string DeliveryNote
		{
			get
			{
				return this._DeliveryNote;
			}
			set
			{
				if ((this._DeliveryNote != value))
				{
					this.OnDeliveryNoteChanging(value);
					this.SendPropertyChanging();
					this._DeliveryNote = value;
					this.SendPropertyChanged("DeliveryNote");
					this.OnDeliveryNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryNoteDate", DbType="Date")]
		public System.Nullable<System.DateTime> DeliveryNoteDate
		{
			get
			{
				return this._DeliveryNoteDate;
			}
			set
			{
				if ((this._DeliveryNoteDate != value))
				{
					this.OnDeliveryNoteDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryNoteDate = value;
					this.SendPropertyChanged("DeliveryNoteDate");
					this.OnDeliveryNoteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMethod", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string PaymentMethod
		{
			get
			{
				return this._PaymentMethod;
			}
			set
			{
				if ((this._PaymentMethod != value))
				{
					this.OnPaymentMethodChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethod = value;
					this.SendPropertyChanged("PaymentMethod");
					this.OnPaymentMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTerm", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string PaymentTerm
		{
			get
			{
				return this._PaymentTerm;
			}
			set
			{
				if ((this._PaymentTerm != value))
				{
					this.OnPaymentTermChanging(value);
					this.SendPropertyChanging();
					this._PaymentTerm = value;
					this.SendPropertyChanged("PaymentTerm");
					this.OnPaymentTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="Date")]
		public System.Nullable<System.DateTime> DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierReference", DbType="VarChar(25)")]
		public string SupplierReference
		{
			get
			{
				return this._SupplierReference;
			}
			set
			{
				if ((this._SupplierReference != value))
				{
					this.OnSupplierReferenceChanging(value);
					this.SendPropertyChanging();
					this._SupplierReference = value;
					this.SendPropertyChanged("SupplierReference");
					this.OnSupplierReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherReference", DbType="VarChar(25)")]
		public string OtherReference
		{
			get
			{
				return this._OtherReference;
			}
			set
			{
				if ((this._OtherReference != value))
				{
					this.OnOtherReferenceChanging(value);
					this.SendPropertyChanging();
					this._OtherReference = value;
					this.SendPropertyChanged("OtherReference");
					this.OnOtherReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoNo", DbType="VarChar(25)")]
		public string PoNo
		{
			get
			{
				return this._PoNo;
			}
			set
			{
				if ((this._PoNo != value))
				{
					this.OnPoNoChanging(value);
					this.SendPropertyChanging();
					this._PoNo = value;
					this.SendPropertyChanged("PoNo");
					this.OnPoNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoDate", DbType="Date")]
		public System.Nullable<System.DateTime> PoDate
		{
			get
			{
				return this._PoDate;
			}
			set
			{
				if ((this._PoDate != value))
				{
					this.OnPoDateChanging(value);
					this.SendPropertyChanging();
					this._PoDate = value;
					this.SendPropertyChanged("PoDate");
					this.OnPoDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DespatchDocumentNo", DbType="VarChar(25)")]
		public string DespatchDocumentNo
		{
			get
			{
				return this._DespatchDocumentNo;
			}
			set
			{
				if ((this._DespatchDocumentNo != value))
				{
					this.OnDespatchDocumentNoChanging(value);
					this.SendPropertyChanging();
					this._DespatchDocumentNo = value;
					this.SendPropertyChanged("DespatchDocumentNo");
					this.OnDespatchDocumentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DespatchedThrough", DbType="VarChar(25)")]
		public string DespatchedThrough
		{
			get
			{
				return this._DespatchedThrough;
			}
			set
			{
				if ((this._DespatchedThrough != value))
				{
					this.OnDespatchedThroughChanging(value);
					this.SendPropertyChanging();
					this._DespatchedThrough = value;
					this.SendPropertyChanged("DespatchedThrough");
					this.OnDespatchedThroughChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalValue", DbType="Real NOT NULL")]
		public float TotalValue
		{
			get
			{
				return this._TotalValue;
			}
			set
			{
				if ((this._TotalValue != value))
				{
					this.OnTotalValueChanging(value);
					this.SendPropertyChanging();
					this._TotalValue = value;
					this.SendPropertyChanged("TotalValue");
					this.OnTotalValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscountRs", DbType="Real NOT NULL")]
		public float TotalDiscountRs
		{
			get
			{
				return this._TotalDiscountRs;
			}
			set
			{
				if ((this._TotalDiscountRs != value))
				{
					this.OnTotalDiscountRsChanging(value);
					this.SendPropertyChanging();
					this._TotalDiscountRs = value;
					this.SendPropertyChanged("TotalDiscountRs");
					this.OnTotalDiscountRsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTaxableValue", DbType="Real NOT NULL")]
		public float TotalTaxableValue
		{
			get
			{
				return this._TotalTaxableValue;
			}
			set
			{
				if ((this._TotalTaxableValue != value))
				{
					this.OnTotalTaxableValueChanging(value);
					this.SendPropertyChanging();
					this._TotalTaxableValue = value;
					this.SendPropertyChanged("TotalTaxableValue");
					this.OnTotalTaxableValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCgstAmount", DbType="Real NOT NULL")]
		public float TotalCgstAmount
		{
			get
			{
				return this._TotalCgstAmount;
			}
			set
			{
				if ((this._TotalCgstAmount != value))
				{
					this.OnTotalCgstAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalCgstAmount = value;
					this.SendPropertyChanged("TotalCgstAmount");
					this.OnTotalCgstAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSgstAmount", DbType="Real NOT NULL")]
		public float TotalSgstAmount
		{
			get
			{
				return this._TotalSgstAmount;
			}
			set
			{
				if ((this._TotalSgstAmount != value))
				{
					this.OnTotalSgstAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalSgstAmount = value;
					this.SendPropertyChanged("TotalSgstAmount");
					this.OnTotalSgstAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalIgstAmount", DbType="Real NOT NULL")]
		public float TotalIgstAmount
		{
			get
			{
				return this._TotalIgstAmount;
			}
			set
			{
				if ((this._TotalIgstAmount != value))
				{
					this.OnTotalIgstAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalIgstAmount = value;
					this.SendPropertyChanged("TotalIgstAmount");
					this.OnTotalIgstAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTaxValue", DbType="Real NOT NULL")]
		public float TotalTaxValue
		{
			get
			{
				return this._TotalTaxValue;
			}
			set
			{
				if ((this._TotalTaxValue != value))
				{
					this.OnTotalTaxValueChanging(value);
					this.SendPropertyChanging();
					this._TotalTaxValue = value;
					this.SendPropertyChanged("TotalTaxValue");
					this.OnTotalTaxValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCessRs", DbType="Real NOT NULL")]
		public float TotalCessRs
		{
			get
			{
				return this._TotalCessRs;
			}
			set
			{
				if ((this._TotalCessRs != value))
				{
					this.OnTotalCessRsChanging(value);
					this.SendPropertyChanging();
					this._TotalCessRs = value;
					this.SendPropertyChanged("TotalCessRs");
					this.OnTotalCessRsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoundOff", DbType="Bit NOT NULL")]
		public bool RoundOff
		{
			get
			{
				return this._RoundOff;
			}
			set
			{
				if ((this._RoundOff != value))
				{
					this.OnRoundOffChanging(value);
					this.SendPropertyChanging();
					this._RoundOff = value;
					this.SendPropertyChanged("RoundOff");
					this.OnRoundOffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoundOffValue", DbType="Real NOT NULL")]
		public float RoundOffValue
		{
			get
			{
				return this._RoundOffValue;
			}
			set
			{
				if ((this._RoundOffValue != value))
				{
					this.OnRoundOffValueChanging(value);
					this.SendPropertyChanging();
					this._RoundOffValue = value;
					this.SendPropertyChanged("RoundOffValue");
					this.OnRoundOffValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Real NOT NULL")]
		public float Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Terms", DbType="VarChar(112)")]
		public string Terms
		{
			get
			{
				return this._Terms;
			}
			set
			{
				if ((this._Terms != value))
				{
					this.OnTermsChanging(value);
					this.SendPropertyChanging();
					this._Terms = value;
					this.SendPropertyChanged("Terms");
					this.OnTermsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paid", DbType="Real NOT NULL")]
		public float Paid
		{
			get
			{
				return this._Paid;
			}
			set
			{
				if ((this._Paid != value))
				{
					this.OnPaidChanging(value);
					this.SendPropertyChanging();
					this._Paid = value;
					this.SendPropertyChanged("Paid");
					this.OnPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Real NOT NULL")]
		public float Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(14) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbPurchaseInvoiceHeader_DbPurchaseInvoiceHsnSacDetail", Storage="_DbPurchaseInvoiceHsnSacDetails", ThisKey="InvoiceNo", OtherKey="InvoiceNo")]
		public EntitySet<DbPurchaseInvoiceHsnSacDetail> DbPurchaseInvoiceHsnSacDetails
		{
			get
			{
				return this._DbPurchaseInvoiceHsnSacDetails;
			}
			set
			{
				this._DbPurchaseInvoiceHsnSacDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbPurchaseInvoiceHeader_DbSupplierLedger", Storage="_DbSupplierLedgers", ThisKey="InvoiceNo", OtherKey="InvoiceNo")]
		public EntitySet<DbSupplierLedger> DbSupplierLedgers
		{
			get
			{
				return this._DbSupplierLedgers;
			}
			set
			{
				this._DbSupplierLedgers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbSupplier_DbPurchaseInvoiceHeader", Storage="_DbSupplier", ThisKey="SupplierId", OtherKey="SupplierId", IsForeignKey=true)]
		public DbSupplier DbSupplier
		{
			get
			{
				return this._DbSupplier.Entity;
			}
			set
			{
				DbSupplier previousValue = this._DbSupplier.Entity;
				if (((previousValue != value) 
							|| (this._DbSupplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DbSupplier.Entity = null;
						previousValue.DbPurchaseInvoiceHeaders.Remove(this);
					}
					this._DbSupplier.Entity = value;
					if ((value != null))
					{
						value.DbPurchaseInvoiceHeaders.Add(this);
						this._SupplierId = value.SupplierId;
					}
					else
					{
						this._SupplierId = default(int);
					}
					this.SendPropertyChanged("DbSupplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DbPurchaseInvoiceHsnSacDetails(DbPurchaseInvoiceHsnSacDetail entity)
		{
			this.SendPropertyChanging();
			entity.DbPurchaseInvoiceHeader = this;
		}
		
		private void detach_DbPurchaseInvoiceHsnSacDetails(DbPurchaseInvoiceHsnSacDetail entity)
		{
			this.SendPropertyChanging();
			entity.DbPurchaseInvoiceHeader = null;
		}
		
		private void attach_DbSupplierLedgers(DbSupplierLedger entity)
		{
			this.SendPropertyChanging();
			entity.DbPurchaseInvoiceHeader = this;
		}
		
		private void detach_DbSupplierLedgers(DbSupplierLedger entity)
		{
			this.SendPropertyChanging();
			entity.DbPurchaseInvoiceHeader = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DbPurchaseInvoiceHsnSacDetails")]
	public partial class DbPurchaseInvoiceHsnSacDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _InvoiceNo;
		
		private string _HsnSac;
		
		private float _TaxableValue;
		
		private float _CgstRate;
		
		private float _CgstAmount;
		
		private float _SgstRate;
		
		private float _SgstAmount;
		
		private float _IgstRate;
		
		private float _IgstAmount;
		
		private float _Amount;
		
		private EntityRef<DbPurchaseInvoiceHeader> _DbPurchaseInvoiceHeader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnInvoiceNoChanging(int value);
    partial void OnInvoiceNoChanged();
    partial void OnHsnSacChanging(string value);
    partial void OnHsnSacChanged();
    partial void OnTaxableValueChanging(float value);
    partial void OnTaxableValueChanged();
    partial void OnCgstRateChanging(float value);
    partial void OnCgstRateChanged();
    partial void OnCgstAmountChanging(float value);
    partial void OnCgstAmountChanged();
    partial void OnSgstRateChanging(float value);
    partial void OnSgstRateChanged();
    partial void OnSgstAmountChanging(float value);
    partial void OnSgstAmountChanged();
    partial void OnIgstRateChanging(float value);
    partial void OnIgstRateChanged();
    partial void OnIgstAmountChanging(float value);
    partial void OnIgstAmountChanged();
    partial void OnAmountChanging(float value);
    partial void OnAmountChanged();
    #endregion
		
		public DbPurchaseInvoiceHsnSacDetail()
		{
			this._DbPurchaseInvoiceHeader = default(EntityRef<DbPurchaseInvoiceHeader>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					if (this._DbPurchaseInvoiceHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HsnSac", DbType="VarChar(10)")]
		public string HsnSac
		{
			get
			{
				return this._HsnSac;
			}
			set
			{
				if ((this._HsnSac != value))
				{
					this.OnHsnSacChanging(value);
					this.SendPropertyChanging();
					this._HsnSac = value;
					this.SendPropertyChanged("HsnSac");
					this.OnHsnSacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxableValue", DbType="Real NOT NULL")]
		public float TaxableValue
		{
			get
			{
				return this._TaxableValue;
			}
			set
			{
				if ((this._TaxableValue != value))
				{
					this.OnTaxableValueChanging(value);
					this.SendPropertyChanging();
					this._TaxableValue = value;
					this.SendPropertyChanged("TaxableValue");
					this.OnTaxableValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CgstRate", DbType="Real NOT NULL")]
		public float CgstRate
		{
			get
			{
				return this._CgstRate;
			}
			set
			{
				if ((this._CgstRate != value))
				{
					this.OnCgstRateChanging(value);
					this.SendPropertyChanging();
					this._CgstRate = value;
					this.SendPropertyChanged("CgstRate");
					this.OnCgstRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CgstAmount", DbType="Real NOT NULL")]
		public float CgstAmount
		{
			get
			{
				return this._CgstAmount;
			}
			set
			{
				if ((this._CgstAmount != value))
				{
					this.OnCgstAmountChanging(value);
					this.SendPropertyChanging();
					this._CgstAmount = value;
					this.SendPropertyChanged("CgstAmount");
					this.OnCgstAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SgstRate", DbType="Real NOT NULL")]
		public float SgstRate
		{
			get
			{
				return this._SgstRate;
			}
			set
			{
				if ((this._SgstRate != value))
				{
					this.OnSgstRateChanging(value);
					this.SendPropertyChanging();
					this._SgstRate = value;
					this.SendPropertyChanged("SgstRate");
					this.OnSgstRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SgstAmount", DbType="Real NOT NULL")]
		public float SgstAmount
		{
			get
			{
				return this._SgstAmount;
			}
			set
			{
				if ((this._SgstAmount != value))
				{
					this.OnSgstAmountChanging(value);
					this.SendPropertyChanging();
					this._SgstAmount = value;
					this.SendPropertyChanged("SgstAmount");
					this.OnSgstAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IgstRate", DbType="Real NOT NULL")]
		public float IgstRate
		{
			get
			{
				return this._IgstRate;
			}
			set
			{
				if ((this._IgstRate != value))
				{
					this.OnIgstRateChanging(value);
					this.SendPropertyChanging();
					this._IgstRate = value;
					this.SendPropertyChanged("IgstRate");
					this.OnIgstRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IgstAmount", DbType="Real NOT NULL")]
		public float IgstAmount
		{
			get
			{
				return this._IgstAmount;
			}
			set
			{
				if ((this._IgstAmount != value))
				{
					this.OnIgstAmountChanging(value);
					this.SendPropertyChanging();
					this._IgstAmount = value;
					this.SendPropertyChanged("IgstAmount");
					this.OnIgstAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Real NOT NULL")]
		public float Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbPurchaseInvoiceHeader_DbPurchaseInvoiceHsnSacDetail", Storage="_DbPurchaseInvoiceHeader", ThisKey="InvoiceNo", OtherKey="InvoiceNo", IsForeignKey=true)]
		public DbPurchaseInvoiceHeader DbPurchaseInvoiceHeader
		{
			get
			{
				return this._DbPurchaseInvoiceHeader.Entity;
			}
			set
			{
				DbPurchaseInvoiceHeader previousValue = this._DbPurchaseInvoiceHeader.Entity;
				if (((previousValue != value) 
							|| (this._DbPurchaseInvoiceHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DbPurchaseInvoiceHeader.Entity = null;
						previousValue.DbPurchaseInvoiceHsnSacDetails.Remove(this);
					}
					this._DbPurchaseInvoiceHeader.Entity = value;
					if ((value != null))
					{
						value.DbPurchaseInvoiceHsnSacDetails.Add(this);
						this._InvoiceNo = value.InvoiceNo;
					}
					else
					{
						this._InvoiceNo = default(int);
					}
					this.SendPropertyChanged("DbPurchaseInvoiceHeader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DbPurchaseInvoiceItemDetails")]
	public partial class DbPurchaseInvoiceItemDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _InvoiceNo;
		
		private string _ItemCode;
		
		private string _ItemName;
		
		private string _ItemDescription;
		
		private string _HsnSac;
		
		private float _Price;
		
		private bool _InclusiveTax;
		
		private float _Quantity;
		
		private int _UnitId;
		
		private float _SubAmount;
		
		private float _Discount;
		
		private float _DiscountRs;
		
		private float _TaxablePrice;
		
		private float _TaxableValue;
		
		private float _TaxRate;
		
		private float _CgstRate;
		
		private float _SgstRate;
		
		private float _IgstRate;
		
		private float _CgstAmount;
		
		private float _SgstAmount;
		
		private float _IgstAmount;
		
		private float _Cess;
		
		private float _CessRs;
		
		private float _Amount;
		
		private EntityRef<DbPurchaseInvoiceItemDetail> _DbPurchaseInvoiceItemDetail2;
		
		private EntityRef<DbItem> _DbItem;
		
		private EntityRef<DbPurchaseInvoiceItemDetail> _DbPurchaseInvoiceItemDetail1;
		
		private EntityRef<DbUnit> _DbUnit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnInvoiceNoChanging(int value);
    partial void OnInvoiceNoChanged();
    partial void OnItemCodeChanging(string value);
    partial void OnItemCodeChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    partial void OnItemDescriptionChanging(string value);
    partial void OnItemDescriptionChanged();
    partial void OnHsnSacChanging(string value);
    partial void OnHsnSacChanged();
    partial void OnPriceChanging(float value);
    partial void OnPriceChanged();
    partial void OnInclusiveTaxChanging(bool value);
    partial void OnInclusiveTaxChanged();
    partial void OnQuantityChanging(float value);
    partial void OnQuantityChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnSubAmountChanging(float value);
    partial void OnSubAmountChanged();
    partial void OnDiscountChanging(float value);
    partial void OnDiscountChanged();
    partial void OnDiscountRsChanging(float value);
    partial void OnDiscountRsChanged();
    partial void OnTaxablePriceChanging(float value);
    partial void OnTaxablePriceChanged();
    partial void OnTaxableValueChanging(float value);
    partial void OnTaxableValueChanged();
    partial void OnTaxRateChanging(float value);
    partial void OnTaxRateChanged();
    partial void OnCgstRateChanging(float value);
    partial void OnCgstRateChanged();
    partial void OnSgstRateChanging(float value);
    partial void OnSgstRateChanged();
    partial void OnIgstRateChanging(float value);
    partial void OnIgstRateChanged();
    partial void OnCgstAmountChanging(float value);
    partial void OnCgstAmountChanged();
    partial void OnSgstAmountChanging(float value);
    partial void OnSgstAmountChanged();
    partial void OnIgstAmountChanging(float value);
    partial void OnIgstAmountChanged();
    partial void OnCessChanging(float value);
    partial void OnCessChanged();
    partial void OnCessRsChanging(float value);
    partial void OnCessRsChanged();
    partial void OnAmountChanging(float value);
    partial void OnAmountChanged();
    #endregion
		
		public DbPurchaseInvoiceItemDetail()
		{
			this._DbPurchaseInvoiceItemDetail2 = default(EntityRef<DbPurchaseInvoiceItemDetail>);
			this._DbItem = default(EntityRef<DbItem>);
			this._DbPurchaseInvoiceItemDetail1 = default(EntityRef<DbPurchaseInvoiceItemDetail>);
			this._DbUnit = default(EntityRef<DbUnit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._DbPurchaseInvoiceItemDetail1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					if (this._DbPurchaseInvoiceItemDetail1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCode", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					if (this._DbItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemCode = value;
					this.SendPropertyChanged("ItemCode");
					this.OnItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this.OnItemNameChanging(value);
					this.SendPropertyChanging();
					this._ItemName = value;
					this.SendPropertyChanged("ItemName");
					this.OnItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemDescription", DbType="NVarChar(100)")]
		public string ItemDescription
		{
			get
			{
				return this._ItemDescription;
			}
			set
			{
				if ((this._ItemDescription != value))
				{
					this.OnItemDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ItemDescription = value;
					this.SendPropertyChanged("ItemDescription");
					this.OnItemDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HsnSac", DbType="VarChar(10)")]
		public string HsnSac
		{
			get
			{
				return this._HsnSac;
			}
			set
			{
				if ((this._HsnSac != value))
				{
					this.OnHsnSacChanging(value);
					this.SendPropertyChanging();
					this._HsnSac = value;
					this.SendPropertyChanged("HsnSac");
					this.OnHsnSacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Real NOT NULL")]
		public float Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InclusiveTax", DbType="Bit NOT NULL")]
		public bool InclusiveTax
		{
			get
			{
				return this._InclusiveTax;
			}
			set
			{
				if ((this._InclusiveTax != value))
				{
					this.OnInclusiveTaxChanging(value);
					this.SendPropertyChanging();
					this._InclusiveTax = value;
					this.SendPropertyChanged("InclusiveTax");
					this.OnInclusiveTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Real NOT NULL")]
		public float Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._DbUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubAmount", DbType="Real NOT NULL")]
		public float SubAmount
		{
			get
			{
				return this._SubAmount;
			}
			set
			{
				if ((this._SubAmount != value))
				{
					this.OnSubAmountChanging(value);
					this.SendPropertyChanging();
					this._SubAmount = value;
					this.SendPropertyChanged("SubAmount");
					this.OnSubAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Real NOT NULL")]
		public float Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountRs", DbType="Real NOT NULL")]
		public float DiscountRs
		{
			get
			{
				return this._DiscountRs;
			}
			set
			{
				if ((this._DiscountRs != value))
				{
					this.OnDiscountRsChanging(value);
					this.SendPropertyChanging();
					this._DiscountRs = value;
					this.SendPropertyChanged("DiscountRs");
					this.OnDiscountRsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxablePrice", DbType="Real NOT NULL")]
		public float TaxablePrice
		{
			get
			{
				return this._TaxablePrice;
			}
			set
			{
				if ((this._TaxablePrice != value))
				{
					this.OnTaxablePriceChanging(value);
					this.SendPropertyChanging();
					this._TaxablePrice = value;
					this.SendPropertyChanged("TaxablePrice");
					this.OnTaxablePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxableValue", DbType="Real NOT NULL")]
		public float TaxableValue
		{
			get
			{
				return this._TaxableValue;
			}
			set
			{
				if ((this._TaxableValue != value))
				{
					this.OnTaxableValueChanging(value);
					this.SendPropertyChanging();
					this._TaxableValue = value;
					this.SendPropertyChanged("TaxableValue");
					this.OnTaxableValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxRate", DbType="Real NOT NULL")]
		public float TaxRate
		{
			get
			{
				return this._TaxRate;
			}
			set
			{
				if ((this._TaxRate != value))
				{
					this.OnTaxRateChanging(value);
					this.SendPropertyChanging();
					this._TaxRate = value;
					this.SendPropertyChanged("TaxRate");
					this.OnTaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CgstRate", DbType="Real NOT NULL")]
		public float CgstRate
		{
			get
			{
				return this._CgstRate;
			}
			set
			{
				if ((this._CgstRate != value))
				{
					this.OnCgstRateChanging(value);
					this.SendPropertyChanging();
					this._CgstRate = value;
					this.SendPropertyChanged("CgstRate");
					this.OnCgstRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SgstRate", DbType="Real NOT NULL")]
		public float SgstRate
		{
			get
			{
				return this._SgstRate;
			}
			set
			{
				if ((this._SgstRate != value))
				{
					this.OnSgstRateChanging(value);
					this.SendPropertyChanging();
					this._SgstRate = value;
					this.SendPropertyChanged("SgstRate");
					this.OnSgstRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IgstRate", DbType="Real NOT NULL")]
		public float IgstRate
		{
			get
			{
				return this._IgstRate;
			}
			set
			{
				if ((this._IgstRate != value))
				{
					this.OnIgstRateChanging(value);
					this.SendPropertyChanging();
					this._IgstRate = value;
					this.SendPropertyChanged("IgstRate");
					this.OnIgstRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CgstAmount", DbType="Real NOT NULL")]
		public float CgstAmount
		{
			get
			{
				return this._CgstAmount;
			}
			set
			{
				if ((this._CgstAmount != value))
				{
					this.OnCgstAmountChanging(value);
					this.SendPropertyChanging();
					this._CgstAmount = value;
					this.SendPropertyChanged("CgstAmount");
					this.OnCgstAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SgstAmount", DbType="Real NOT NULL")]
		public float SgstAmount
		{
			get
			{
				return this._SgstAmount;
			}
			set
			{
				if ((this._SgstAmount != value))
				{
					this.OnSgstAmountChanging(value);
					this.SendPropertyChanging();
					this._SgstAmount = value;
					this.SendPropertyChanged("SgstAmount");
					this.OnSgstAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IgstAmount", DbType="Real NOT NULL")]
		public float IgstAmount
		{
			get
			{
				return this._IgstAmount;
			}
			set
			{
				if ((this._IgstAmount != value))
				{
					this.OnIgstAmountChanging(value);
					this.SendPropertyChanging();
					this._IgstAmount = value;
					this.SendPropertyChanged("IgstAmount");
					this.OnIgstAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cess", DbType="Real NOT NULL")]
		public float Cess
		{
			get
			{
				return this._Cess;
			}
			set
			{
				if ((this._Cess != value))
				{
					this.OnCessChanging(value);
					this.SendPropertyChanging();
					this._Cess = value;
					this.SendPropertyChanged("Cess");
					this.OnCessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CessRs", DbType="Real NOT NULL")]
		public float CessRs
		{
			get
			{
				return this._CessRs;
			}
			set
			{
				if ((this._CessRs != value))
				{
					this.OnCessRsChanging(value);
					this.SendPropertyChanging();
					this._CessRs = value;
					this.SendPropertyChanged("CessRs");
					this.OnCessRsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Real NOT NULL")]
		public float Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbPurchaseInvoiceItemDetail_DbPurchaseInvoiceItemDetail", Storage="_DbPurchaseInvoiceItemDetail2", ThisKey="Id,InvoiceNo", OtherKey="Id,InvoiceNo", IsUnique=true, IsForeignKey=false)]
		public DbPurchaseInvoiceItemDetail DbPurchaseInvoiceItemDetail2
		{
			get
			{
				return this._DbPurchaseInvoiceItemDetail2.Entity;
			}
			set
			{
				DbPurchaseInvoiceItemDetail previousValue = this._DbPurchaseInvoiceItemDetail2.Entity;
				if (((previousValue != value) 
							|| (this._DbPurchaseInvoiceItemDetail2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DbPurchaseInvoiceItemDetail2.Entity = null;
						previousValue.DbPurchaseInvoiceItemDetail1 = null;
					}
					this._DbPurchaseInvoiceItemDetail2.Entity = value;
					if ((value != null))
					{
						value.DbPurchaseInvoiceItemDetail1 = this;
					}
					this.SendPropertyChanged("DbPurchaseInvoiceItemDetail2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbItem_DbPurchaseInvoiceItemDetail", Storage="_DbItem", ThisKey="ItemCode", OtherKey="ItemCode", IsForeignKey=true)]
		public DbItem DbItem
		{
			get
			{
				return this._DbItem.Entity;
			}
			set
			{
				DbItem previousValue = this._DbItem.Entity;
				if (((previousValue != value) 
							|| (this._DbItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DbItem.Entity = null;
						previousValue.DbPurchaseInvoiceItemDetails.Remove(this);
					}
					this._DbItem.Entity = value;
					if ((value != null))
					{
						value.DbPurchaseInvoiceItemDetails.Add(this);
						this._ItemCode = value.ItemCode;
					}
					else
					{
						this._ItemCode = default(string);
					}
					this.SendPropertyChanged("DbItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbPurchaseInvoiceItemDetail_DbPurchaseInvoiceItemDetail", Storage="_DbPurchaseInvoiceItemDetail1", ThisKey="Id,InvoiceNo", OtherKey="Id,InvoiceNo", IsForeignKey=true)]
		public DbPurchaseInvoiceItemDetail DbPurchaseInvoiceItemDetail1
		{
			get
			{
				return this._DbPurchaseInvoiceItemDetail1.Entity;
			}
			set
			{
				DbPurchaseInvoiceItemDetail previousValue = this._DbPurchaseInvoiceItemDetail1.Entity;
				if (((previousValue != value) 
							|| (this._DbPurchaseInvoiceItemDetail1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DbPurchaseInvoiceItemDetail1.Entity = null;
						previousValue.DbPurchaseInvoiceItemDetail2 = null;
					}
					this._DbPurchaseInvoiceItemDetail1.Entity = value;
					if ((value != null))
					{
						value.DbPurchaseInvoiceItemDetail2 = this;
						this._Id = value.Id;
						this._InvoiceNo = value.InvoiceNo;
					}
					else
					{
						this._Id = default(int);
						this._InvoiceNo = default(int);
					}
					this.SendPropertyChanged("DbPurchaseInvoiceItemDetail1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbUnit_DbPurchaseInvoiceItemDetail", Storage="_DbUnit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public DbUnit DbUnit
		{
			get
			{
				return this._DbUnit.Entity;
			}
			set
			{
				DbUnit previousValue = this._DbUnit.Entity;
				if (((previousValue != value) 
							|| (this._DbUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DbUnit.Entity = null;
						previousValue.DbPurchaseInvoiceItemDetails.Remove(this);
					}
					this._DbUnit.Entity = value;
					if ((value != null))
					{
						value.DbPurchaseInvoiceItemDetails.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("DbUnit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DbQuotationHeader")]
	public partial class DbQuotationHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QuotationNo;
		
		private string _Prefix;
		
		private string _QuotationName;
		
		private System.DateTime _QuotationDate;
		
		private int _CustomerId;
		
		private string _PlaceOfSupply;
		
		private bool _ReverseCharge;
		
		private bool _DiscountOnAll;
		
		private float _TotalDiscount;
		
		private string _DeliveryNote;
		
		private System.Nullable<System.DateTime> _DeliveryNoteDate;
		
		private string _PaymentMethod;
		
		private string _PaymentTerm;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		private string _SupplierReference;
		
		private string _OtherReference;
		
		private string _PoNo;
		
		private System.Nullable<System.DateTime> _PoDate;
		
		private string _DespatchDocumentNo;
		
		private string _DespatchedThrough;
		
		private float _TotalValue;
		
		private float _TotalDiscountRs;
		
		private float _TotalTaxableValue;
		
		private float _TotalCgstAmount;
		
		private float _TotalSgstAmount;
		
		private float _TotalIgstAmount;
		
		private float _TotalTaxValue;
		
		private float _TotalCessRs;
		
		private bool _RoundOff;
		
		private float _RoundOffValue;
		
		private float _Total;
		
		private string _Terms;
		
		private EntitySet<DbQuotationHsnSacDetail> _DbQuotationHsnSacDetails;
		
		private EntitySet<DbQuotationItemDetail> _DbQuotationItemDetails;
		
		private EntityRef<DbCustomer> _DbCustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuotationNoChanging(int value);
    partial void OnQuotationNoChanged();
    partial void OnPrefixChanging(string value);
    partial void OnPrefixChanged();
    partial void OnQuotationNameChanging(string value);
    partial void OnQuotationNameChanged();
    partial void OnQuotationDateChanging(System.DateTime value);
    partial void OnQuotationDateChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnPlaceOfSupplyChanging(string value);
    partial void OnPlaceOfSupplyChanged();
    partial void OnReverseChargeChanging(bool value);
    partial void OnReverseChargeChanged();
    partial void OnDiscountOnAllChanging(bool value);
    partial void OnDiscountOnAllChanged();
    partial void OnTotalDiscountChanging(float value);
    partial void OnTotalDiscountChanged();
    partial void OnDeliveryNoteChanging(string value);
    partial void OnDeliveryNoteChanged();
    partial void OnDeliveryNoteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeliveryNoteDateChanged();
    partial void OnPaymentMethodChanging(string value);
    partial void OnPaymentMethodChanged();
    partial void OnPaymentTermChanging(string value);
    partial void OnPaymentTermChanged();
    partial void OnDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDueDateChanged();
    partial void OnSupplierReferenceChanging(string value);
    partial void OnSupplierReferenceChanged();
    partial void OnOtherReferenceChanging(string value);
    partial void OnOtherReferenceChanged();
    partial void OnPoNoChanging(string value);
    partial void OnPoNoChanged();
    partial void OnPoDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPoDateChanged();
    partial void OnDespatchDocumentNoChanging(string value);
    partial void OnDespatchDocumentNoChanged();
    partial void OnDespatchedThroughChanging(string value);
    partial void OnDespatchedThroughChanged();
    partial void OnTotalValueChanging(float value);
    partial void OnTotalValueChanged();
    partial void OnTotalDiscountRsChanging(float value);
    partial void OnTotalDiscountRsChanged();
    partial void OnTotalTaxableValueChanging(float value);
    partial void OnTotalTaxableValueChanged();
    partial void OnTotalCgstAmountChanging(float value);
    partial void OnTotalCgstAmountChanged();
    partial void OnTotalSgstAmountChanging(float value);
    partial void OnTotalSgstAmountChanged();
    partial void OnTotalIgstAmountChanging(float value);
    partial void OnTotalIgstAmountChanged();
    partial void OnTotalTaxValueChanging(float value);
    partial void OnTotalTaxValueChanged();
    partial void OnTotalCessRsChanging(float value);
    partial void OnTotalCessRsChanged();
    partial void OnRoundOffChanging(bool value);
    partial void OnRoundOffChanged();
    partial void OnRoundOffValueChanging(float value);
    partial void OnRoundOffValueChanged();
    partial void OnTotalChanging(float value);
    partial void OnTotalChanged();
    partial void OnTermsChanging(string value);
    partial void OnTermsChanged();
    #endregion
		
		public DbQuotationHeader()
		{
			this._DbQuotationHsnSacDetails = new EntitySet<DbQuotationHsnSacDetail>(new Action<DbQuotationHsnSacDetail>(this.attach_DbQuotationHsnSacDetails), new Action<DbQuotationHsnSacDetail>(this.detach_DbQuotationHsnSacDetails));
			this._DbQuotationItemDetails = new EntitySet<DbQuotationItemDetail>(new Action<DbQuotationItemDetail>(this.attach_DbQuotationItemDetails), new Action<DbQuotationItemDetail>(this.detach_DbQuotationItemDetails));
			this._DbCustomer = default(EntityRef<DbCustomer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuotationNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int QuotationNo
		{
			get
			{
				return this._QuotationNo;
			}
			set
			{
				if ((this._QuotationNo != value))
				{
					this.OnQuotationNoChanging(value);
					this.SendPropertyChanging();
					this._QuotationNo = value;
					this.SendPropertyChanged("QuotationNo");
					this.OnQuotationNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prefix", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Prefix
		{
			get
			{
				return this._Prefix;
			}
			set
			{
				if ((this._Prefix != value))
				{
					this.OnPrefixChanging(value);
					this.SendPropertyChanging();
					this._Prefix = value;
					this.SendPropertyChanged("Prefix");
					this.OnPrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuotationName", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string QuotationName
		{
			get
			{
				return this._QuotationName;
			}
			set
			{
				if ((this._QuotationName != value))
				{
					this.OnQuotationNameChanging(value);
					this.SendPropertyChanging();
					this._QuotationName = value;
					this.SendPropertyChanged("QuotationName");
					this.OnQuotationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuotationDate", DbType="Date NOT NULL")]
		public System.DateTime QuotationDate
		{
			get
			{
				return this._QuotationDate;
			}
			set
			{
				if ((this._QuotationDate != value))
				{
					this.OnQuotationDateChanging(value);
					this.SendPropertyChanging();
					this._QuotationDate = value;
					this.SendPropertyChanged("QuotationDate");
					this.OnQuotationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._DbCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceOfSupply", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string PlaceOfSupply
		{
			get
			{
				return this._PlaceOfSupply;
			}
			set
			{
				if ((this._PlaceOfSupply != value))
				{
					this.OnPlaceOfSupplyChanging(value);
					this.SendPropertyChanging();
					this._PlaceOfSupply = value;
					this.SendPropertyChanged("PlaceOfSupply");
					this.OnPlaceOfSupplyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReverseCharge", DbType="Bit NOT NULL")]
		public bool ReverseCharge
		{
			get
			{
				return this._ReverseCharge;
			}
			set
			{
				if ((this._ReverseCharge != value))
				{
					this.OnReverseChargeChanging(value);
					this.SendPropertyChanging();
					this._ReverseCharge = value;
					this.SendPropertyChanged("ReverseCharge");
					this.OnReverseChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountOnAll", DbType="Bit NOT NULL")]
		public bool DiscountOnAll
		{
			get
			{
				return this._DiscountOnAll;
			}
			set
			{
				if ((this._DiscountOnAll != value))
				{
					this.OnDiscountOnAllChanging(value);
					this.SendPropertyChanging();
					this._DiscountOnAll = value;
					this.SendPropertyChanged("DiscountOnAll");
					this.OnDiscountOnAllChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscount", DbType="Real NOT NULL")]
		public float TotalDiscount
		{
			get
			{
				return this._TotalDiscount;
			}
			set
			{
				if ((this._TotalDiscount != value))
				{
					this.OnTotalDiscountChanging(value);
					this.SendPropertyChanging();
					this._TotalDiscount = value;
					this.SendPropertyChanged("TotalDiscount");
					this.OnTotalDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryNote", DbType="VarChar(25)")]
		public string DeliveryNote
		{
			get
			{
				return this._DeliveryNote;
			}
			set
			{
				if ((this._DeliveryNote != value))
				{
					this.OnDeliveryNoteChanging(value);
					this.SendPropertyChanging();
					this._DeliveryNote = value;
					this.SendPropertyChanged("DeliveryNote");
					this.OnDeliveryNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryNoteDate", DbType="Date")]
		public System.Nullable<System.DateTime> DeliveryNoteDate
		{
			get
			{
				return this._DeliveryNoteDate;
			}
			set
			{
				if ((this._DeliveryNoteDate != value))
				{
					this.OnDeliveryNoteDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryNoteDate = value;
					this.SendPropertyChanged("DeliveryNoteDate");
					this.OnDeliveryNoteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMethod", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string PaymentMethod
		{
			get
			{
				return this._PaymentMethod;
			}
			set
			{
				if ((this._PaymentMethod != value))
				{
					this.OnPaymentMethodChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethod = value;
					this.SendPropertyChanged("PaymentMethod");
					this.OnPaymentMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTerm", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string PaymentTerm
		{
			get
			{
				return this._PaymentTerm;
			}
			set
			{
				if ((this._PaymentTerm != value))
				{
					this.OnPaymentTermChanging(value);
					this.SendPropertyChanging();
					this._PaymentTerm = value;
					this.SendPropertyChanged("PaymentTerm");
					this.OnPaymentTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="Date")]
		public System.Nullable<System.DateTime> DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierReference", DbType="VarChar(25)")]
		public string SupplierReference
		{
			get
			{
				return this._SupplierReference;
			}
			set
			{
				if ((this._SupplierReference != value))
				{
					this.OnSupplierReferenceChanging(value);
					this.SendPropertyChanging();
					this._SupplierReference = value;
					this.SendPropertyChanged("SupplierReference");
					this.OnSupplierReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherReference", DbType="VarChar(25)")]
		public string OtherReference
		{
			get
			{
				return this._OtherReference;
			}
			set
			{
				if ((this._OtherReference != value))
				{
					this.OnOtherReferenceChanging(value);
					this.SendPropertyChanging();
					this._OtherReference = value;
					this.SendPropertyChanged("OtherReference");
					this.OnOtherReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoNo", DbType="VarChar(25)")]
		public string PoNo
		{
			get
			{
				return this._PoNo;
			}
			set
			{
				if ((this._PoNo != value))
				{
					this.OnPoNoChanging(value);
					this.SendPropertyChanging();
					this._PoNo = value;
					this.SendPropertyChanged("PoNo");
					this.OnPoNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoDate", DbType="Date")]
		public System.Nullable<System.DateTime> PoDate
		{
			get
			{
				return this._PoDate;
			}
			set
			{
				if ((this._PoDate != value))
				{
					this.OnPoDateChanging(value);
					this.SendPropertyChanging();
					this._PoDate = value;
					this.SendPropertyChanged("PoDate");
					this.OnPoDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DespatchDocumentNo", DbType="VarChar(25)")]
		public string DespatchDocumentNo
		{
			get
			{
				return this._DespatchDocumentNo;
			}
			set
			{
				if ((this._DespatchDocumentNo != value))
				{
					this.OnDespatchDocumentNoChanging(value);
					this.SendPropertyChanging();
					this._DespatchDocumentNo = value;
					this.SendPropertyChanged("DespatchDocumentNo");
					this.OnDespatchDocumentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DespatchedThrough", DbType="VarChar(25)")]
		public string DespatchedThrough
		{
			get
			{
				return this._DespatchedThrough;
			}
			set
			{
				if ((this._DespatchedThrough != value))
				{
					this.OnDespatchedThroughChanging(value);
					this.SendPropertyChanging();
					this._DespatchedThrough = value;
					this.SendPropertyChanged("DespatchedThrough");
					this.OnDespatchedThroughChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalValue", DbType="Real NOT NULL")]
		public float TotalValue
		{
			get
			{
				return this._TotalValue;
			}
			set
			{
				if ((this._TotalValue != value))
				{
					this.OnTotalValueChanging(value);
					this.SendPropertyChanging();
					this._TotalValue = value;
					this.SendPropertyChanged("TotalValue");
					this.OnTotalValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscountRs", DbType="Real NOT NULL")]
		public float TotalDiscountRs
		{
			get
			{
				return this._TotalDiscountRs;
			}
			set
			{
				if ((this._TotalDiscountRs != value))
				{
					this.OnTotalDiscountRsChanging(value);
					this.SendPropertyChanging();
					this._TotalDiscountRs = value;
					this.SendPropertyChanged("TotalDiscountRs");
					this.OnTotalDiscountRsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTaxableValue", DbType="Real NOT NULL")]
		public float TotalTaxableValue
		{
			get
			{
				return this._TotalTaxableValue;
			}
			set
			{
				if ((this._TotalTaxableValue != value))
				{
					this.OnTotalTaxableValueChanging(value);
					this.SendPropertyChanging();
					this._TotalTaxableValue = value;
					this.SendPropertyChanged("TotalTaxableValue");
					this.OnTotalTaxableValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCgstAmount", DbType="Real NOT NULL")]
		public float TotalCgstAmount
		{
			get
			{
				return this._TotalCgstAmount;
			}
			set
			{
				if ((this._TotalCgstAmount != value))
				{
					this.OnTotalCgstAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalCgstAmount = value;
					this.SendPropertyChanged("TotalCgstAmount");
					this.OnTotalCgstAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSgstAmount", DbType="Real NOT NULL")]
		public float TotalSgstAmount
		{
			get
			{
				return this._TotalSgstAmount;
			}
			set
			{
				if ((this._TotalSgstAmount != value))
				{
					this.OnTotalSgstAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalSgstAmount = value;
					this.SendPropertyChanged("TotalSgstAmount");
					this.OnTotalSgstAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalIgstAmount", DbType="Real NOT NULL")]
		public float TotalIgstAmount
		{
			get
			{
				return this._TotalIgstAmount;
			}
			set
			{
				if ((this._TotalIgstAmount != value))
				{
					this.OnTotalIgstAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalIgstAmount = value;
					this.SendPropertyChanged("TotalIgstAmount");
					this.OnTotalIgstAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTaxValue", DbType="Real NOT NULL")]
		public float TotalTaxValue
		{
			get
			{
				return this._TotalTaxValue;
			}
			set
			{
				if ((this._TotalTaxValue != value))
				{
					this.OnTotalTaxValueChanging(value);
					this.SendPropertyChanging();
					this._TotalTaxValue = value;
					this.SendPropertyChanged("TotalTaxValue");
					this.OnTotalTaxValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCessRs", DbType="Real NOT NULL")]
		public float TotalCessRs
		{
			get
			{
				return this._TotalCessRs;
			}
			set
			{
				if ((this._TotalCessRs != value))
				{
					this.OnTotalCessRsChanging(value);
					this.SendPropertyChanging();
					this._TotalCessRs = value;
					this.SendPropertyChanged("TotalCessRs");
					this.OnTotalCessRsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoundOff", DbType="Bit NOT NULL")]
		public bool RoundOff
		{
			get
			{
				return this._RoundOff;
			}
			set
			{
				if ((this._RoundOff != value))
				{
					this.OnRoundOffChanging(value);
					this.SendPropertyChanging();
					this._RoundOff = value;
					this.SendPropertyChanged("RoundOff");
					this.OnRoundOffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoundOffValue", DbType="Real NOT NULL")]
		public float RoundOffValue
		{
			get
			{
				return this._RoundOffValue;
			}
			set
			{
				if ((this._RoundOffValue != value))
				{
					this.OnRoundOffValueChanging(value);
					this.SendPropertyChanging();
					this._RoundOffValue = value;
					this.SendPropertyChanged("RoundOffValue");
					this.OnRoundOffValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Real NOT NULL")]
		public float Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Terms", DbType="VarChar(112)")]
		public string Terms
		{
			get
			{
				return this._Terms;
			}
			set
			{
				if ((this._Terms != value))
				{
					this.OnTermsChanging(value);
					this.SendPropertyChanging();
					this._Terms = value;
					this.SendPropertyChanged("Terms");
					this.OnTermsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbQuotationHeader_DbQuotationHsnSacDetail", Storage="_DbQuotationHsnSacDetails", ThisKey="QuotationNo", OtherKey="QuotationNo")]
		public EntitySet<DbQuotationHsnSacDetail> DbQuotationHsnSacDetails
		{
			get
			{
				return this._DbQuotationHsnSacDetails;
			}
			set
			{
				this._DbQuotationHsnSacDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbQuotationHeader_DbQuotationItemDetail", Storage="_DbQuotationItemDetails", ThisKey="QuotationNo", OtherKey="QuotationNo")]
		public EntitySet<DbQuotationItemDetail> DbQuotationItemDetails
		{
			get
			{
				return this._DbQuotationItemDetails;
			}
			set
			{
				this._DbQuotationItemDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbCustomer_DbQuotationHeader", Storage="_DbCustomer", ThisKey="CustomerId", OtherKey="CustomerId", IsForeignKey=true)]
		public DbCustomer DbCustomer
		{
			get
			{
				return this._DbCustomer.Entity;
			}
			set
			{
				DbCustomer previousValue = this._DbCustomer.Entity;
				if (((previousValue != value) 
							|| (this._DbCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DbCustomer.Entity = null;
						previousValue.DbQuotationHeaders.Remove(this);
					}
					this._DbCustomer.Entity = value;
					if ((value != null))
					{
						value.DbQuotationHeaders.Add(this);
						this._CustomerId = value.CustomerId;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("DbCustomer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DbQuotationHsnSacDetails(DbQuotationHsnSacDetail entity)
		{
			this.SendPropertyChanging();
			entity.DbQuotationHeader = this;
		}
		
		private void detach_DbQuotationHsnSacDetails(DbQuotationHsnSacDetail entity)
		{
			this.SendPropertyChanging();
			entity.DbQuotationHeader = null;
		}
		
		private void attach_DbQuotationItemDetails(DbQuotationItemDetail entity)
		{
			this.SendPropertyChanging();
			entity.DbQuotationHeader = this;
		}
		
		private void detach_DbQuotationItemDetails(DbQuotationItemDetail entity)
		{
			this.SendPropertyChanging();
			entity.DbQuotationHeader = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DbQuotationHsnSacDetails")]
	public partial class DbQuotationHsnSacDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _QuotationNo;
		
		private string _HsnSac;
		
		private float _TaxableValue;
		
		private float _CgstRate;
		
		private float _CgstAmount;
		
		private float _SgstRate;
		
		private float _SgstAmount;
		
		private float _IgstRate;
		
		private float _IgstAmount;
		
		private float _Amount;
		
		private EntityRef<DbQuotationHeader> _DbQuotationHeader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnQuotationNoChanging(int value);
    partial void OnQuotationNoChanged();
    partial void OnHsnSacChanging(string value);
    partial void OnHsnSacChanged();
    partial void OnTaxableValueChanging(float value);
    partial void OnTaxableValueChanged();
    partial void OnCgstRateChanging(float value);
    partial void OnCgstRateChanged();
    partial void OnCgstAmountChanging(float value);
    partial void OnCgstAmountChanged();
    partial void OnSgstRateChanging(float value);
    partial void OnSgstRateChanged();
    partial void OnSgstAmountChanging(float value);
    partial void OnSgstAmountChanged();
    partial void OnIgstRateChanging(float value);
    partial void OnIgstRateChanged();
    partial void OnIgstAmountChanging(float value);
    partial void OnIgstAmountChanged();
    partial void OnAmountChanging(float value);
    partial void OnAmountChanged();
    #endregion
		
		public DbQuotationHsnSacDetail()
		{
			this._DbQuotationHeader = default(EntityRef<DbQuotationHeader>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuotationNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int QuotationNo
		{
			get
			{
				return this._QuotationNo;
			}
			set
			{
				if ((this._QuotationNo != value))
				{
					if (this._DbQuotationHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuotationNoChanging(value);
					this.SendPropertyChanging();
					this._QuotationNo = value;
					this.SendPropertyChanged("QuotationNo");
					this.OnQuotationNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HsnSac", DbType="VarChar(10)")]
		public string HsnSac
		{
			get
			{
				return this._HsnSac;
			}
			set
			{
				if ((this._HsnSac != value))
				{
					this.OnHsnSacChanging(value);
					this.SendPropertyChanging();
					this._HsnSac = value;
					this.SendPropertyChanged("HsnSac");
					this.OnHsnSacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxableValue", DbType="Real NOT NULL")]
		public float TaxableValue
		{
			get
			{
				return this._TaxableValue;
			}
			set
			{
				if ((this._TaxableValue != value))
				{
					this.OnTaxableValueChanging(value);
					this.SendPropertyChanging();
					this._TaxableValue = value;
					this.SendPropertyChanged("TaxableValue");
					this.OnTaxableValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CgstRate", DbType="Real NOT NULL")]
		public float CgstRate
		{
			get
			{
				return this._CgstRate;
			}
			set
			{
				if ((this._CgstRate != value))
				{
					this.OnCgstRateChanging(value);
					this.SendPropertyChanging();
					this._CgstRate = value;
					this.SendPropertyChanged("CgstRate");
					this.OnCgstRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CgstAmount", DbType="Real NOT NULL")]
		public float CgstAmount
		{
			get
			{
				return this._CgstAmount;
			}
			set
			{
				if ((this._CgstAmount != value))
				{
					this.OnCgstAmountChanging(value);
					this.SendPropertyChanging();
					this._CgstAmount = value;
					this.SendPropertyChanged("CgstAmount");
					this.OnCgstAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SgstRate", DbType="Real NOT NULL")]
		public float SgstRate
		{
			get
			{
				return this._SgstRate;
			}
			set
			{
				if ((this._SgstRate != value))
				{
					this.OnSgstRateChanging(value);
					this.SendPropertyChanging();
					this._SgstRate = value;
					this.SendPropertyChanged("SgstRate");
					this.OnSgstRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SgstAmount", DbType="Real NOT NULL")]
		public float SgstAmount
		{
			get
			{
				return this._SgstAmount;
			}
			set
			{
				if ((this._SgstAmount != value))
				{
					this.OnSgstAmountChanging(value);
					this.SendPropertyChanging();
					this._SgstAmount = value;
					this.SendPropertyChanged("SgstAmount");
					this.OnSgstAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IgstRate", DbType="Real NOT NULL")]
		public float IgstRate
		{
			get
			{
				return this._IgstRate;
			}
			set
			{
				if ((this._IgstRate != value))
				{
					this.OnIgstRateChanging(value);
					this.SendPropertyChanging();
					this._IgstRate = value;
					this.SendPropertyChanged("IgstRate");
					this.OnIgstRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IgstAmount", DbType="Real NOT NULL")]
		public float IgstAmount
		{
			get
			{
				return this._IgstAmount;
			}
			set
			{
				if ((this._IgstAmount != value))
				{
					this.OnIgstAmountChanging(value);
					this.SendPropertyChanging();
					this._IgstAmount = value;
					this.SendPropertyChanged("IgstAmount");
					this.OnIgstAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Real NOT NULL")]
		public float Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbQuotationHeader_DbQuotationHsnSacDetail", Storage="_DbQuotationHeader", ThisKey="QuotationNo", OtherKey="QuotationNo", IsForeignKey=true)]
		public DbQuotationHeader DbQuotationHeader
		{
			get
			{
				return this._DbQuotationHeader.Entity;
			}
			set
			{
				DbQuotationHeader previousValue = this._DbQuotationHeader.Entity;
				if (((previousValue != value) 
							|| (this._DbQuotationHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DbQuotationHeader.Entity = null;
						previousValue.DbQuotationHsnSacDetails.Remove(this);
					}
					this._DbQuotationHeader.Entity = value;
					if ((value != null))
					{
						value.DbQuotationHsnSacDetails.Add(this);
						this._QuotationNo = value.QuotationNo;
					}
					else
					{
						this._QuotationNo = default(int);
					}
					this.SendPropertyChanged("DbQuotationHeader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DbQuotationItemDetails")]
	public partial class DbQuotationItemDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _QuotationNo;
		
		private string _ItemCode;
		
		private string _ItemName;
		
		private string _ItemDescription;
		
		private string _HsnSac;
		
		private float _Price;
		
		private bool _InclusiveTax;
		
		private float _Quantity;
		
		private int _UnitId;
		
		private float _SubAmount;
		
		private float _Discount;
		
		private float _DiscountRs;
		
		private float _TaxablePrice;
		
		private float _TaxableValue;
		
		private float _TaxRate;
		
		private float _CgstRate;
		
		private float _SgstRate;
		
		private float _IgstRate;
		
		private float _CgstAmount;
		
		private float _SgstAmount;
		
		private float _IgstAmount;
		
		private float _Cess;
		
		private float _CessRs;
		
		private float _Amount;
		
		private EntityRef<DbItem> _DbItem;
		
		private EntityRef<DbQuotationHeader> _DbQuotationHeader;
		
		private EntityRef<DbUnit> _DbUnit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnQuotationNoChanging(int value);
    partial void OnQuotationNoChanged();
    partial void OnItemCodeChanging(string value);
    partial void OnItemCodeChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    partial void OnItemDescriptionChanging(string value);
    partial void OnItemDescriptionChanged();
    partial void OnHsnSacChanging(string value);
    partial void OnHsnSacChanged();
    partial void OnPriceChanging(float value);
    partial void OnPriceChanged();
    partial void OnInclusiveTaxChanging(bool value);
    partial void OnInclusiveTaxChanged();
    partial void OnQuantityChanging(float value);
    partial void OnQuantityChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnSubAmountChanging(float value);
    partial void OnSubAmountChanged();
    partial void OnDiscountChanging(float value);
    partial void OnDiscountChanged();
    partial void OnDiscountRsChanging(float value);
    partial void OnDiscountRsChanged();
    partial void OnTaxablePriceChanging(float value);
    partial void OnTaxablePriceChanged();
    partial void OnTaxableValueChanging(float value);
    partial void OnTaxableValueChanged();
    partial void OnTaxRateChanging(float value);
    partial void OnTaxRateChanged();
    partial void OnCgstRateChanging(float value);
    partial void OnCgstRateChanged();
    partial void OnSgstRateChanging(float value);
    partial void OnSgstRateChanged();
    partial void OnIgstRateChanging(float value);
    partial void OnIgstRateChanged();
    partial void OnCgstAmountChanging(float value);
    partial void OnCgstAmountChanged();
    partial void OnSgstAmountChanging(float value);
    partial void OnSgstAmountChanged();
    partial void OnIgstAmountChanging(float value);
    partial void OnIgstAmountChanged();
    partial void OnCessChanging(float value);
    partial void OnCessChanged();
    partial void OnCessRsChanging(float value);
    partial void OnCessRsChanged();
    partial void OnAmountChanging(float value);
    partial void OnAmountChanged();
    #endregion
		
		public DbQuotationItemDetail()
		{
			this._DbItem = default(EntityRef<DbItem>);
			this._DbQuotationHeader = default(EntityRef<DbQuotationHeader>);
			this._DbUnit = default(EntityRef<DbUnit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuotationNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int QuotationNo
		{
			get
			{
				return this._QuotationNo;
			}
			set
			{
				if ((this._QuotationNo != value))
				{
					if (this._DbQuotationHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuotationNoChanging(value);
					this.SendPropertyChanging();
					this._QuotationNo = value;
					this.SendPropertyChanged("QuotationNo");
					this.OnQuotationNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCode", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					if (this._DbItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemCode = value;
					this.SendPropertyChanged("ItemCode");
					this.OnItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this.OnItemNameChanging(value);
					this.SendPropertyChanging();
					this._ItemName = value;
					this.SendPropertyChanged("ItemName");
					this.OnItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemDescription", DbType="NVarChar(100)")]
		public string ItemDescription
		{
			get
			{
				return this._ItemDescription;
			}
			set
			{
				if ((this._ItemDescription != value))
				{
					this.OnItemDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ItemDescription = value;
					this.SendPropertyChanged("ItemDescription");
					this.OnItemDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HsnSac", DbType="VarChar(10)")]
		public string HsnSac
		{
			get
			{
				return this._HsnSac;
			}
			set
			{
				if ((this._HsnSac != value))
				{
					this.OnHsnSacChanging(value);
					this.SendPropertyChanging();
					this._HsnSac = value;
					this.SendPropertyChanged("HsnSac");
					this.OnHsnSacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Real NOT NULL")]
		public float Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InclusiveTax", DbType="Bit NOT NULL")]
		public bool InclusiveTax
		{
			get
			{
				return this._InclusiveTax;
			}
			set
			{
				if ((this._InclusiveTax != value))
				{
					this.OnInclusiveTaxChanging(value);
					this.SendPropertyChanging();
					this._InclusiveTax = value;
					this.SendPropertyChanged("InclusiveTax");
					this.OnInclusiveTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Real NOT NULL")]
		public float Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._DbUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubAmount", DbType="Real NOT NULL")]
		public float SubAmount
		{
			get
			{
				return this._SubAmount;
			}
			set
			{
				if ((this._SubAmount != value))
				{
					this.OnSubAmountChanging(value);
					this.SendPropertyChanging();
					this._SubAmount = value;
					this.SendPropertyChanged("SubAmount");
					this.OnSubAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Real NOT NULL")]
		public float Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountRs", DbType="Real NOT NULL")]
		public float DiscountRs
		{
			get
			{
				return this._DiscountRs;
			}
			set
			{
				if ((this._DiscountRs != value))
				{
					this.OnDiscountRsChanging(value);
					this.SendPropertyChanging();
					this._DiscountRs = value;
					this.SendPropertyChanged("DiscountRs");
					this.OnDiscountRsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxablePrice", DbType="Real NOT NULL")]
		public float TaxablePrice
		{
			get
			{
				return this._TaxablePrice;
			}
			set
			{
				if ((this._TaxablePrice != value))
				{
					this.OnTaxablePriceChanging(value);
					this.SendPropertyChanging();
					this._TaxablePrice = value;
					this.SendPropertyChanged("TaxablePrice");
					this.OnTaxablePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxableValue", DbType="Real NOT NULL")]
		public float TaxableValue
		{
			get
			{
				return this._TaxableValue;
			}
			set
			{
				if ((this._TaxableValue != value))
				{
					this.OnTaxableValueChanging(value);
					this.SendPropertyChanging();
					this._TaxableValue = value;
					this.SendPropertyChanged("TaxableValue");
					this.OnTaxableValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxRate", DbType="Real NOT NULL")]
		public float TaxRate
		{
			get
			{
				return this._TaxRate;
			}
			set
			{
				if ((this._TaxRate != value))
				{
					this.OnTaxRateChanging(value);
					this.SendPropertyChanging();
					this._TaxRate = value;
					this.SendPropertyChanged("TaxRate");
					this.OnTaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CgstRate", DbType="Real NOT NULL")]
		public float CgstRate
		{
			get
			{
				return this._CgstRate;
			}
			set
			{
				if ((this._CgstRate != value))
				{
					this.OnCgstRateChanging(value);
					this.SendPropertyChanging();
					this._CgstRate = value;
					this.SendPropertyChanged("CgstRate");
					this.OnCgstRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SgstRate", DbType="Real NOT NULL")]
		public float SgstRate
		{
			get
			{
				return this._SgstRate;
			}
			set
			{
				if ((this._SgstRate != value))
				{
					this.OnSgstRateChanging(value);
					this.SendPropertyChanging();
					this._SgstRate = value;
					this.SendPropertyChanged("SgstRate");
					this.OnSgstRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IgstRate", DbType="Real NOT NULL")]
		public float IgstRate
		{
			get
			{
				return this._IgstRate;
			}
			set
			{
				if ((this._IgstRate != value))
				{
					this.OnIgstRateChanging(value);
					this.SendPropertyChanging();
					this._IgstRate = value;
					this.SendPropertyChanged("IgstRate");
					this.OnIgstRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CgstAmount", DbType="Real NOT NULL")]
		public float CgstAmount
		{
			get
			{
				return this._CgstAmount;
			}
			set
			{
				if ((this._CgstAmount != value))
				{
					this.OnCgstAmountChanging(value);
					this.SendPropertyChanging();
					this._CgstAmount = value;
					this.SendPropertyChanged("CgstAmount");
					this.OnCgstAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SgstAmount", DbType="Real NOT NULL")]
		public float SgstAmount
		{
			get
			{
				return this._SgstAmount;
			}
			set
			{
				if ((this._SgstAmount != value))
				{
					this.OnSgstAmountChanging(value);
					this.SendPropertyChanging();
					this._SgstAmount = value;
					this.SendPropertyChanged("SgstAmount");
					this.OnSgstAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IgstAmount", DbType="Real NOT NULL")]
		public float IgstAmount
		{
			get
			{
				return this._IgstAmount;
			}
			set
			{
				if ((this._IgstAmount != value))
				{
					this.OnIgstAmountChanging(value);
					this.SendPropertyChanging();
					this._IgstAmount = value;
					this.SendPropertyChanged("IgstAmount");
					this.OnIgstAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cess", DbType="Real NOT NULL")]
		public float Cess
		{
			get
			{
				return this._Cess;
			}
			set
			{
				if ((this._Cess != value))
				{
					this.OnCessChanging(value);
					this.SendPropertyChanging();
					this._Cess = value;
					this.SendPropertyChanged("Cess");
					this.OnCessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CessRs", DbType="Real NOT NULL")]
		public float CessRs
		{
			get
			{
				return this._CessRs;
			}
			set
			{
				if ((this._CessRs != value))
				{
					this.OnCessRsChanging(value);
					this.SendPropertyChanging();
					this._CessRs = value;
					this.SendPropertyChanged("CessRs");
					this.OnCessRsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Real NOT NULL")]
		public float Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbItem_DbQuotationItemDetail", Storage="_DbItem", ThisKey="ItemCode", OtherKey="ItemCode", IsForeignKey=true)]
		public DbItem DbItem
		{
			get
			{
				return this._DbItem.Entity;
			}
			set
			{
				DbItem previousValue = this._DbItem.Entity;
				if (((previousValue != value) 
							|| (this._DbItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DbItem.Entity = null;
						previousValue.DbQuotationItemDetails.Remove(this);
					}
					this._DbItem.Entity = value;
					if ((value != null))
					{
						value.DbQuotationItemDetails.Add(this);
						this._ItemCode = value.ItemCode;
					}
					else
					{
						this._ItemCode = default(string);
					}
					this.SendPropertyChanged("DbItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbQuotationHeader_DbQuotationItemDetail", Storage="_DbQuotationHeader", ThisKey="QuotationNo", OtherKey="QuotationNo", IsForeignKey=true)]
		public DbQuotationHeader DbQuotationHeader
		{
			get
			{
				return this._DbQuotationHeader.Entity;
			}
			set
			{
				DbQuotationHeader previousValue = this._DbQuotationHeader.Entity;
				if (((previousValue != value) 
							|| (this._DbQuotationHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DbQuotationHeader.Entity = null;
						previousValue.DbQuotationItemDetails.Remove(this);
					}
					this._DbQuotationHeader.Entity = value;
					if ((value != null))
					{
						value.DbQuotationItemDetails.Add(this);
						this._QuotationNo = value.QuotationNo;
					}
					else
					{
						this._QuotationNo = default(int);
					}
					this.SendPropertyChanged("DbQuotationHeader");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbUnit_DbQuotationItemDetail", Storage="_DbUnit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public DbUnit DbUnit
		{
			get
			{
				return this._DbUnit.Entity;
			}
			set
			{
				DbUnit previousValue = this._DbUnit.Entity;
				if (((previousValue != value) 
							|| (this._DbUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DbUnit.Entity = null;
						previousValue.DbQuotationItemDetails.Remove(this);
					}
					this._DbUnit.Entity = value;
					if ((value != null))
					{
						value.DbQuotationItemDetails.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("DbUnit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DbSalesInvoiceHeader")]
	public partial class DbSalesInvoiceHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceNo;
		
		private string _Prefix;
		
		private string _InvoiceName;
		
		private System.DateTime _InvoiceDate;
		
		private int _CustomerId;
		
		private string _PlaceOfSupply;
		
		private bool _ReverseCharge;
		
		private bool _DiscountOnAll;
		
		private float _TotalDiscount;
		
		private string _DeliveryNote;
		
		private System.Nullable<System.DateTime> _DeliveryNoteDate;
		
		private string _PaymentMethod;
		
		private string _PaymentTerm;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		private string _SupplierReference;
		
		private string _OtherReference;
		
		private string _PoNo;
		
		private System.Nullable<System.DateTime> _PoDate;
		
		private string _DespatchDocumentNo;
		
		private string _DespatchedThrough;
		
		private float _TotalValue;
		
		private float _TotalDiscountRs;
		
		private float _TotalTaxableValue;
		
		private float _TotalCgstAmount;
		
		private float _TotalSgstAmount;
		
		private float _TotalIgstAmount;
		
		private float _TotalTaxValue;
		
		private float _TotalCessRs;
		
		private bool _RoundOff;
		
		private float _RoundOffValue;
		
		private float _Total;
		
		private string _Terms;
		
		private float _Paid;
		
		private float _Balance;
		
		private string _Status;
		
		private string _SfcNo;
		
		private EntitySet<DbSalesInvoiceHsnSacDetail> _DbSalesInvoiceHsnSacDetails;
		
		private EntitySet<DbSalesInvoiceItemDetail> _DbSalesInvoiceItemDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceNoChanging(int value);
    partial void OnInvoiceNoChanged();
    partial void OnPrefixChanging(string value);
    partial void OnPrefixChanged();
    partial void OnInvoiceNameChanging(string value);
    partial void OnInvoiceNameChanged();
    partial void OnInvoiceDateChanging(System.DateTime value);
    partial void OnInvoiceDateChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnPlaceOfSupplyChanging(string value);
    partial void OnPlaceOfSupplyChanged();
    partial void OnReverseChargeChanging(bool value);
    partial void OnReverseChargeChanged();
    partial void OnDiscountOnAllChanging(bool value);
    partial void OnDiscountOnAllChanged();
    partial void OnTotalDiscountChanging(float value);
    partial void OnTotalDiscountChanged();
    partial void OnDeliveryNoteChanging(string value);
    partial void OnDeliveryNoteChanged();
    partial void OnDeliveryNoteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeliveryNoteDateChanged();
    partial void OnPaymentMethodChanging(string value);
    partial void OnPaymentMethodChanged();
    partial void OnPaymentTermChanging(string value);
    partial void OnPaymentTermChanged();
    partial void OnDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDueDateChanged();
    partial void OnSupplierReferenceChanging(string value);
    partial void OnSupplierReferenceChanged();
    partial void OnOtherReferenceChanging(string value);
    partial void OnOtherReferenceChanged();
    partial void OnPoNoChanging(string value);
    partial void OnPoNoChanged();
    partial void OnPoDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPoDateChanged();
    partial void OnDespatchDocumentNoChanging(string value);
    partial void OnDespatchDocumentNoChanged();
    partial void OnDespatchedThroughChanging(string value);
    partial void OnDespatchedThroughChanged();
    partial void OnTotalValueChanging(float value);
    partial void OnTotalValueChanged();
    partial void OnTotalDiscountRsChanging(float value);
    partial void OnTotalDiscountRsChanged();
    partial void OnTotalTaxableValueChanging(float value);
    partial void OnTotalTaxableValueChanged();
    partial void OnTotalCgstAmountChanging(float value);
    partial void OnTotalCgstAmountChanged();
    partial void OnTotalSgstAmountChanging(float value);
    partial void OnTotalSgstAmountChanged();
    partial void OnTotalIgstAmountChanging(float value);
    partial void OnTotalIgstAmountChanged();
    partial void OnTotalTaxValueChanging(float value);
    partial void OnTotalTaxValueChanged();
    partial void OnTotalCessRsChanging(float value);
    partial void OnTotalCessRsChanged();
    partial void OnRoundOffChanging(bool value);
    partial void OnRoundOffChanged();
    partial void OnRoundOffValueChanging(float value);
    partial void OnRoundOffValueChanged();
    partial void OnTotalChanging(float value);
    partial void OnTotalChanged();
    partial void OnTermsChanging(string value);
    partial void OnTermsChanged();
    partial void OnPaidChanging(float value);
    partial void OnPaidChanged();
    partial void OnBalanceChanging(float value);
    partial void OnBalanceChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnSfcNoChanging(string value);
    partial void OnSfcNoChanged();
    #endregion
		
		public DbSalesInvoiceHeader()
		{
			this._DbSalesInvoiceHsnSacDetails = new EntitySet<DbSalesInvoiceHsnSacDetail>(new Action<DbSalesInvoiceHsnSacDetail>(this.attach_DbSalesInvoiceHsnSacDetails), new Action<DbSalesInvoiceHsnSacDetail>(this.detach_DbSalesInvoiceHsnSacDetails));
			this._DbSalesInvoiceItemDetails = new EntitySet<DbSalesInvoiceItemDetail>(new Action<DbSalesInvoiceItemDetail>(this.attach_DbSalesInvoiceItemDetails), new Action<DbSalesInvoiceItemDetail>(this.detach_DbSalesInvoiceItemDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prefix", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Prefix
		{
			get
			{
				return this._Prefix;
			}
			set
			{
				if ((this._Prefix != value))
				{
					this.OnPrefixChanging(value);
					this.SendPropertyChanging();
					this._Prefix = value;
					this.SendPropertyChanged("Prefix");
					this.OnPrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceName", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string InvoiceName
		{
			get
			{
				return this._InvoiceName;
			}
			set
			{
				if ((this._InvoiceName != value))
				{
					this.OnInvoiceNameChanging(value);
					this.SendPropertyChanging();
					this._InvoiceName = value;
					this.SendPropertyChanged("InvoiceName");
					this.OnInvoiceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="Date NOT NULL")]
		public System.DateTime InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceOfSupply", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string PlaceOfSupply
		{
			get
			{
				return this._PlaceOfSupply;
			}
			set
			{
				if ((this._PlaceOfSupply != value))
				{
					this.OnPlaceOfSupplyChanging(value);
					this.SendPropertyChanging();
					this._PlaceOfSupply = value;
					this.SendPropertyChanged("PlaceOfSupply");
					this.OnPlaceOfSupplyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReverseCharge", DbType="Bit NOT NULL")]
		public bool ReverseCharge
		{
			get
			{
				return this._ReverseCharge;
			}
			set
			{
				if ((this._ReverseCharge != value))
				{
					this.OnReverseChargeChanging(value);
					this.SendPropertyChanging();
					this._ReverseCharge = value;
					this.SendPropertyChanged("ReverseCharge");
					this.OnReverseChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountOnAll", DbType="Bit NOT NULL")]
		public bool DiscountOnAll
		{
			get
			{
				return this._DiscountOnAll;
			}
			set
			{
				if ((this._DiscountOnAll != value))
				{
					this.OnDiscountOnAllChanging(value);
					this.SendPropertyChanging();
					this._DiscountOnAll = value;
					this.SendPropertyChanged("DiscountOnAll");
					this.OnDiscountOnAllChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscount", DbType="Real NOT NULL")]
		public float TotalDiscount
		{
			get
			{
				return this._TotalDiscount;
			}
			set
			{
				if ((this._TotalDiscount != value))
				{
					this.OnTotalDiscountChanging(value);
					this.SendPropertyChanging();
					this._TotalDiscount = value;
					this.SendPropertyChanged("TotalDiscount");
					this.OnTotalDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryNote", DbType="VarChar(25)")]
		public string DeliveryNote
		{
			get
			{
				return this._DeliveryNote;
			}
			set
			{
				if ((this._DeliveryNote != value))
				{
					this.OnDeliveryNoteChanging(value);
					this.SendPropertyChanging();
					this._DeliveryNote = value;
					this.SendPropertyChanged("DeliveryNote");
					this.OnDeliveryNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryNoteDate", DbType="Date")]
		public System.Nullable<System.DateTime> DeliveryNoteDate
		{
			get
			{
				return this._DeliveryNoteDate;
			}
			set
			{
				if ((this._DeliveryNoteDate != value))
				{
					this.OnDeliveryNoteDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryNoteDate = value;
					this.SendPropertyChanged("DeliveryNoteDate");
					this.OnDeliveryNoteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMethod", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string PaymentMethod
		{
			get
			{
				return this._PaymentMethod;
			}
			set
			{
				if ((this._PaymentMethod != value))
				{
					this.OnPaymentMethodChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethod = value;
					this.SendPropertyChanged("PaymentMethod");
					this.OnPaymentMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTerm", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string PaymentTerm
		{
			get
			{
				return this._PaymentTerm;
			}
			set
			{
				if ((this._PaymentTerm != value))
				{
					this.OnPaymentTermChanging(value);
					this.SendPropertyChanging();
					this._PaymentTerm = value;
					this.SendPropertyChanged("PaymentTerm");
					this.OnPaymentTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="Date")]
		public System.Nullable<System.DateTime> DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierReference", DbType="VarChar(25)")]
		public string SupplierReference
		{
			get
			{
				return this._SupplierReference;
			}
			set
			{
				if ((this._SupplierReference != value))
				{
					this.OnSupplierReferenceChanging(value);
					this.SendPropertyChanging();
					this._SupplierReference = value;
					this.SendPropertyChanged("SupplierReference");
					this.OnSupplierReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherReference", DbType="VarChar(25)")]
		public string OtherReference
		{
			get
			{
				return this._OtherReference;
			}
			set
			{
				if ((this._OtherReference != value))
				{
					this.OnOtherReferenceChanging(value);
					this.SendPropertyChanging();
					this._OtherReference = value;
					this.SendPropertyChanged("OtherReference");
					this.OnOtherReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoNo", DbType="VarChar(25)")]
		public string PoNo
		{
			get
			{
				return this._PoNo;
			}
			set
			{
				if ((this._PoNo != value))
				{
					this.OnPoNoChanging(value);
					this.SendPropertyChanging();
					this._PoNo = value;
					this.SendPropertyChanged("PoNo");
					this.OnPoNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoDate", DbType="Date")]
		public System.Nullable<System.DateTime> PoDate
		{
			get
			{
				return this._PoDate;
			}
			set
			{
				if ((this._PoDate != value))
				{
					this.OnPoDateChanging(value);
					this.SendPropertyChanging();
					this._PoDate = value;
					this.SendPropertyChanged("PoDate");
					this.OnPoDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DespatchDocumentNo", DbType="VarChar(25)")]
		public string DespatchDocumentNo
		{
			get
			{
				return this._DespatchDocumentNo;
			}
			set
			{
				if ((this._DespatchDocumentNo != value))
				{
					this.OnDespatchDocumentNoChanging(value);
					this.SendPropertyChanging();
					this._DespatchDocumentNo = value;
					this.SendPropertyChanged("DespatchDocumentNo");
					this.OnDespatchDocumentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DespatchedThrough", DbType="VarChar(25)")]
		public string DespatchedThrough
		{
			get
			{
				return this._DespatchedThrough;
			}
			set
			{
				if ((this._DespatchedThrough != value))
				{
					this.OnDespatchedThroughChanging(value);
					this.SendPropertyChanging();
					this._DespatchedThrough = value;
					this.SendPropertyChanged("DespatchedThrough");
					this.OnDespatchedThroughChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalValue", DbType="Real NOT NULL")]
		public float TotalValue
		{
			get
			{
				return this._TotalValue;
			}
			set
			{
				if ((this._TotalValue != value))
				{
					this.OnTotalValueChanging(value);
					this.SendPropertyChanging();
					this._TotalValue = value;
					this.SendPropertyChanged("TotalValue");
					this.OnTotalValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscountRs", DbType="Real NOT NULL")]
		public float TotalDiscountRs
		{
			get
			{
				return this._TotalDiscountRs;
			}
			set
			{
				if ((this._TotalDiscountRs != value))
				{
					this.OnTotalDiscountRsChanging(value);
					this.SendPropertyChanging();
					this._TotalDiscountRs = value;
					this.SendPropertyChanged("TotalDiscountRs");
					this.OnTotalDiscountRsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTaxableValue", DbType="Real NOT NULL")]
		public float TotalTaxableValue
		{
			get
			{
				return this._TotalTaxableValue;
			}
			set
			{
				if ((this._TotalTaxableValue != value))
				{
					this.OnTotalTaxableValueChanging(value);
					this.SendPropertyChanging();
					this._TotalTaxableValue = value;
					this.SendPropertyChanged("TotalTaxableValue");
					this.OnTotalTaxableValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCgstAmount", DbType="Real NOT NULL")]
		public float TotalCgstAmount
		{
			get
			{
				return this._TotalCgstAmount;
			}
			set
			{
				if ((this._TotalCgstAmount != value))
				{
					this.OnTotalCgstAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalCgstAmount = value;
					this.SendPropertyChanged("TotalCgstAmount");
					this.OnTotalCgstAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSgstAmount", DbType="Real NOT NULL")]
		public float TotalSgstAmount
		{
			get
			{
				return this._TotalSgstAmount;
			}
			set
			{
				if ((this._TotalSgstAmount != value))
				{
					this.OnTotalSgstAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalSgstAmount = value;
					this.SendPropertyChanged("TotalSgstAmount");
					this.OnTotalSgstAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalIgstAmount", DbType="Real NOT NULL")]
		public float TotalIgstAmount
		{
			get
			{
				return this._TotalIgstAmount;
			}
			set
			{
				if ((this._TotalIgstAmount != value))
				{
					this.OnTotalIgstAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalIgstAmount = value;
					this.SendPropertyChanged("TotalIgstAmount");
					this.OnTotalIgstAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTaxValue", DbType="Real NOT NULL")]
		public float TotalTaxValue
		{
			get
			{
				return this._TotalTaxValue;
			}
			set
			{
				if ((this._TotalTaxValue != value))
				{
					this.OnTotalTaxValueChanging(value);
					this.SendPropertyChanging();
					this._TotalTaxValue = value;
					this.SendPropertyChanged("TotalTaxValue");
					this.OnTotalTaxValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCessRs", DbType="Real NOT NULL")]
		public float TotalCessRs
		{
			get
			{
				return this._TotalCessRs;
			}
			set
			{
				if ((this._TotalCessRs != value))
				{
					this.OnTotalCessRsChanging(value);
					this.SendPropertyChanging();
					this._TotalCessRs = value;
					this.SendPropertyChanged("TotalCessRs");
					this.OnTotalCessRsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoundOff", DbType="Bit NOT NULL")]
		public bool RoundOff
		{
			get
			{
				return this._RoundOff;
			}
			set
			{
				if ((this._RoundOff != value))
				{
					this.OnRoundOffChanging(value);
					this.SendPropertyChanging();
					this._RoundOff = value;
					this.SendPropertyChanged("RoundOff");
					this.OnRoundOffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoundOffValue", DbType="Real NOT NULL")]
		public float RoundOffValue
		{
			get
			{
				return this._RoundOffValue;
			}
			set
			{
				if ((this._RoundOffValue != value))
				{
					this.OnRoundOffValueChanging(value);
					this.SendPropertyChanging();
					this._RoundOffValue = value;
					this.SendPropertyChanged("RoundOffValue");
					this.OnRoundOffValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Real NOT NULL")]
		public float Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Terms", DbType="VarChar(112)")]
		public string Terms
		{
			get
			{
				return this._Terms;
			}
			set
			{
				if ((this._Terms != value))
				{
					this.OnTermsChanging(value);
					this.SendPropertyChanging();
					this._Terms = value;
					this.SendPropertyChanged("Terms");
					this.OnTermsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paid", DbType="Real NOT NULL")]
		public float Paid
		{
			get
			{
				return this._Paid;
			}
			set
			{
				if ((this._Paid != value))
				{
					this.OnPaidChanging(value);
					this.SendPropertyChanging();
					this._Paid = value;
					this.SendPropertyChanged("Paid");
					this.OnPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Real NOT NULL")]
		public float Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(14) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SfcNo", DbType="VarChar(50)")]
		public string SfcNo
		{
			get
			{
				return this._SfcNo;
			}
			set
			{
				if ((this._SfcNo != value))
				{
					this.OnSfcNoChanging(value);
					this.SendPropertyChanging();
					this._SfcNo = value;
					this.SendPropertyChanged("SfcNo");
					this.OnSfcNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbSalesInvoiceHeader_DbSalesInvoiceHsnSacDetail", Storage="_DbSalesInvoiceHsnSacDetails", ThisKey="InvoiceNo", OtherKey="InvoiceNo")]
		public EntitySet<DbSalesInvoiceHsnSacDetail> DbSalesInvoiceHsnSacDetails
		{
			get
			{
				return this._DbSalesInvoiceHsnSacDetails;
			}
			set
			{
				this._DbSalesInvoiceHsnSacDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbSalesInvoiceHeader_DbSalesInvoiceItemDetail", Storage="_DbSalesInvoiceItemDetails", ThisKey="InvoiceNo", OtherKey="InvoiceNo")]
		public EntitySet<DbSalesInvoiceItemDetail> DbSalesInvoiceItemDetails
		{
			get
			{
				return this._DbSalesInvoiceItemDetails;
			}
			set
			{
				this._DbSalesInvoiceItemDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DbSalesInvoiceHsnSacDetails(DbSalesInvoiceHsnSacDetail entity)
		{
			this.SendPropertyChanging();
			entity.DbSalesInvoiceHeader = this;
		}
		
		private void detach_DbSalesInvoiceHsnSacDetails(DbSalesInvoiceHsnSacDetail entity)
		{
			this.SendPropertyChanging();
			entity.DbSalesInvoiceHeader = null;
		}
		
		private void attach_DbSalesInvoiceItemDetails(DbSalesInvoiceItemDetail entity)
		{
			this.SendPropertyChanging();
			entity.DbSalesInvoiceHeader = this;
		}
		
		private void detach_DbSalesInvoiceItemDetails(DbSalesInvoiceItemDetail entity)
		{
			this.SendPropertyChanging();
			entity.DbSalesInvoiceHeader = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DbSalesInvoiceHsnSacDetails")]
	public partial class DbSalesInvoiceHsnSacDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _InvoiceNo;
		
		private string _HsnSac;
		
		private float _TaxableValue;
		
		private float _CgstRate;
		
		private float _CgstAmount;
		
		private float _SgstRate;
		
		private float _SgstAmount;
		
		private float _IgstRate;
		
		private float _IgstAmount;
		
		private float _Amount;
		
		private EntityRef<DbSalesInvoiceHeader> _DbSalesInvoiceHeader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnInvoiceNoChanging(int value);
    partial void OnInvoiceNoChanged();
    partial void OnHsnSacChanging(string value);
    partial void OnHsnSacChanged();
    partial void OnTaxableValueChanging(float value);
    partial void OnTaxableValueChanged();
    partial void OnCgstRateChanging(float value);
    partial void OnCgstRateChanged();
    partial void OnCgstAmountChanging(float value);
    partial void OnCgstAmountChanged();
    partial void OnSgstRateChanging(float value);
    partial void OnSgstRateChanged();
    partial void OnSgstAmountChanging(float value);
    partial void OnSgstAmountChanged();
    partial void OnIgstRateChanging(float value);
    partial void OnIgstRateChanged();
    partial void OnIgstAmountChanging(float value);
    partial void OnIgstAmountChanged();
    partial void OnAmountChanging(float value);
    partial void OnAmountChanged();
    #endregion
		
		public DbSalesInvoiceHsnSacDetail()
		{
			this._DbSalesInvoiceHeader = default(EntityRef<DbSalesInvoiceHeader>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					if (this._DbSalesInvoiceHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HsnSac", DbType="VarChar(10)")]
		public string HsnSac
		{
			get
			{
				return this._HsnSac;
			}
			set
			{
				if ((this._HsnSac != value))
				{
					this.OnHsnSacChanging(value);
					this.SendPropertyChanging();
					this._HsnSac = value;
					this.SendPropertyChanged("HsnSac");
					this.OnHsnSacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxableValue", DbType="Real NOT NULL")]
		public float TaxableValue
		{
			get
			{
				return this._TaxableValue;
			}
			set
			{
				if ((this._TaxableValue != value))
				{
					this.OnTaxableValueChanging(value);
					this.SendPropertyChanging();
					this._TaxableValue = value;
					this.SendPropertyChanged("TaxableValue");
					this.OnTaxableValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CgstRate", DbType="Real NOT NULL")]
		public float CgstRate
		{
			get
			{
				return this._CgstRate;
			}
			set
			{
				if ((this._CgstRate != value))
				{
					this.OnCgstRateChanging(value);
					this.SendPropertyChanging();
					this._CgstRate = value;
					this.SendPropertyChanged("CgstRate");
					this.OnCgstRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CgstAmount", DbType="Real NOT NULL")]
		public float CgstAmount
		{
			get
			{
				return this._CgstAmount;
			}
			set
			{
				if ((this._CgstAmount != value))
				{
					this.OnCgstAmountChanging(value);
					this.SendPropertyChanging();
					this._CgstAmount = value;
					this.SendPropertyChanged("CgstAmount");
					this.OnCgstAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SgstRate", DbType="Real NOT NULL")]
		public float SgstRate
		{
			get
			{
				return this._SgstRate;
			}
			set
			{
				if ((this._SgstRate != value))
				{
					this.OnSgstRateChanging(value);
					this.SendPropertyChanging();
					this._SgstRate = value;
					this.SendPropertyChanged("SgstRate");
					this.OnSgstRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SgstAmount", DbType="Real NOT NULL")]
		public float SgstAmount
		{
			get
			{
				return this._SgstAmount;
			}
			set
			{
				if ((this._SgstAmount != value))
				{
					this.OnSgstAmountChanging(value);
					this.SendPropertyChanging();
					this._SgstAmount = value;
					this.SendPropertyChanged("SgstAmount");
					this.OnSgstAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IgstRate", DbType="Real NOT NULL")]
		public float IgstRate
		{
			get
			{
				return this._IgstRate;
			}
			set
			{
				if ((this._IgstRate != value))
				{
					this.OnIgstRateChanging(value);
					this.SendPropertyChanging();
					this._IgstRate = value;
					this.SendPropertyChanged("IgstRate");
					this.OnIgstRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IgstAmount", DbType="Real NOT NULL")]
		public float IgstAmount
		{
			get
			{
				return this._IgstAmount;
			}
			set
			{
				if ((this._IgstAmount != value))
				{
					this.OnIgstAmountChanging(value);
					this.SendPropertyChanging();
					this._IgstAmount = value;
					this.SendPropertyChanged("IgstAmount");
					this.OnIgstAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Real NOT NULL")]
		public float Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbSalesInvoiceHeader_DbSalesInvoiceHsnSacDetail", Storage="_DbSalesInvoiceHeader", ThisKey="InvoiceNo", OtherKey="InvoiceNo", IsForeignKey=true)]
		public DbSalesInvoiceHeader DbSalesInvoiceHeader
		{
			get
			{
				return this._DbSalesInvoiceHeader.Entity;
			}
			set
			{
				DbSalesInvoiceHeader previousValue = this._DbSalesInvoiceHeader.Entity;
				if (((previousValue != value) 
							|| (this._DbSalesInvoiceHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DbSalesInvoiceHeader.Entity = null;
						previousValue.DbSalesInvoiceHsnSacDetails.Remove(this);
					}
					this._DbSalesInvoiceHeader.Entity = value;
					if ((value != null))
					{
						value.DbSalesInvoiceHsnSacDetails.Add(this);
						this._InvoiceNo = value.InvoiceNo;
					}
					else
					{
						this._InvoiceNo = default(int);
					}
					this.SendPropertyChanged("DbSalesInvoiceHeader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DbSalesInvoiceItemDetails")]
	public partial class DbSalesInvoiceItemDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _InvoiceNo;
		
		private string _ItemCode;
		
		private string _ItemName;
		
		private string _ItemDescription;
		
		private string _HsnSac;
		
		private float _Price;
		
		private bool _InclusiveTax;
		
		private float _Quantity;
		
		private int _UnitId;
		
		private float _SubAmount;
		
		private float _Discount;
		
		private float _DiscountRs;
		
		private float _TaxablePrice;
		
		private float _TaxableValue;
		
		private float _TaxRate;
		
		private float _CgstRate;
		
		private float _SgstRate;
		
		private float _IgstRate;
		
		private float _CgstAmount;
		
		private float _SgstAmount;
		
		private float _IgstAmount;
		
		private float _Cess;
		
		private float _CessRs;
		
		private float _Amount;
		
		private EntityRef<DbItem> _DbItem;
		
		private EntityRef<DbSalesInvoiceHeader> _DbSalesInvoiceHeader;
		
		private EntityRef<DbUnit> _DbUnit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnInvoiceNoChanging(int value);
    partial void OnInvoiceNoChanged();
    partial void OnItemCodeChanging(string value);
    partial void OnItemCodeChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    partial void OnItemDescriptionChanging(string value);
    partial void OnItemDescriptionChanged();
    partial void OnHsnSacChanging(string value);
    partial void OnHsnSacChanged();
    partial void OnPriceChanging(float value);
    partial void OnPriceChanged();
    partial void OnInclusiveTaxChanging(bool value);
    partial void OnInclusiveTaxChanged();
    partial void OnQuantityChanging(float value);
    partial void OnQuantityChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnSubAmountChanging(float value);
    partial void OnSubAmountChanged();
    partial void OnDiscountChanging(float value);
    partial void OnDiscountChanged();
    partial void OnDiscountRsChanging(float value);
    partial void OnDiscountRsChanged();
    partial void OnTaxablePriceChanging(float value);
    partial void OnTaxablePriceChanged();
    partial void OnTaxableValueChanging(float value);
    partial void OnTaxableValueChanged();
    partial void OnTaxRateChanging(float value);
    partial void OnTaxRateChanged();
    partial void OnCgstRateChanging(float value);
    partial void OnCgstRateChanged();
    partial void OnSgstRateChanging(float value);
    partial void OnSgstRateChanged();
    partial void OnIgstRateChanging(float value);
    partial void OnIgstRateChanged();
    partial void OnCgstAmountChanging(float value);
    partial void OnCgstAmountChanged();
    partial void OnSgstAmountChanging(float value);
    partial void OnSgstAmountChanged();
    partial void OnIgstAmountChanging(float value);
    partial void OnIgstAmountChanged();
    partial void OnCessChanging(float value);
    partial void OnCessChanged();
    partial void OnCessRsChanging(float value);
    partial void OnCessRsChanged();
    partial void OnAmountChanging(float value);
    partial void OnAmountChanged();
    #endregion
		
		public DbSalesInvoiceItemDetail()
		{
			this._DbItem = default(EntityRef<DbItem>);
			this._DbSalesInvoiceHeader = default(EntityRef<DbSalesInvoiceHeader>);
			this._DbUnit = default(EntityRef<DbUnit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					if (this._DbSalesInvoiceHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCode", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					if (this._DbItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemCode = value;
					this.SendPropertyChanged("ItemCode");
					this.OnItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this.OnItemNameChanging(value);
					this.SendPropertyChanging();
					this._ItemName = value;
					this.SendPropertyChanged("ItemName");
					this.OnItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemDescription", DbType="NVarChar(100)")]
		public string ItemDescription
		{
			get
			{
				return this._ItemDescription;
			}
			set
			{
				if ((this._ItemDescription != value))
				{
					this.OnItemDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ItemDescription = value;
					this.SendPropertyChanged("ItemDescription");
					this.OnItemDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HsnSac", DbType="VarChar(10)")]
		public string HsnSac
		{
			get
			{
				return this._HsnSac;
			}
			set
			{
				if ((this._HsnSac != value))
				{
					this.OnHsnSacChanging(value);
					this.SendPropertyChanging();
					this._HsnSac = value;
					this.SendPropertyChanged("HsnSac");
					this.OnHsnSacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Real NOT NULL")]
		public float Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InclusiveTax", DbType="Bit NOT NULL")]
		public bool InclusiveTax
		{
			get
			{
				return this._InclusiveTax;
			}
			set
			{
				if ((this._InclusiveTax != value))
				{
					this.OnInclusiveTaxChanging(value);
					this.SendPropertyChanging();
					this._InclusiveTax = value;
					this.SendPropertyChanged("InclusiveTax");
					this.OnInclusiveTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Real NOT NULL")]
		public float Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._DbUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubAmount", DbType="Real NOT NULL")]
		public float SubAmount
		{
			get
			{
				return this._SubAmount;
			}
			set
			{
				if ((this._SubAmount != value))
				{
					this.OnSubAmountChanging(value);
					this.SendPropertyChanging();
					this._SubAmount = value;
					this.SendPropertyChanged("SubAmount");
					this.OnSubAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Real NOT NULL")]
		public float Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountRs", DbType="Real NOT NULL")]
		public float DiscountRs
		{
			get
			{
				return this._DiscountRs;
			}
			set
			{
				if ((this._DiscountRs != value))
				{
					this.OnDiscountRsChanging(value);
					this.SendPropertyChanging();
					this._DiscountRs = value;
					this.SendPropertyChanged("DiscountRs");
					this.OnDiscountRsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxablePrice", DbType="Real NOT NULL")]
		public float TaxablePrice
		{
			get
			{
				return this._TaxablePrice;
			}
			set
			{
				if ((this._TaxablePrice != value))
				{
					this.OnTaxablePriceChanging(value);
					this.SendPropertyChanging();
					this._TaxablePrice = value;
					this.SendPropertyChanged("TaxablePrice");
					this.OnTaxablePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxableValue", DbType="Real NOT NULL")]
		public float TaxableValue
		{
			get
			{
				return this._TaxableValue;
			}
			set
			{
				if ((this._TaxableValue != value))
				{
					this.OnTaxableValueChanging(value);
					this.SendPropertyChanging();
					this._TaxableValue = value;
					this.SendPropertyChanged("TaxableValue");
					this.OnTaxableValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxRate", DbType="Real NOT NULL")]
		public float TaxRate
		{
			get
			{
				return this._TaxRate;
			}
			set
			{
				if ((this._TaxRate != value))
				{
					this.OnTaxRateChanging(value);
					this.SendPropertyChanging();
					this._TaxRate = value;
					this.SendPropertyChanged("TaxRate");
					this.OnTaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CgstRate", DbType="Real NOT NULL")]
		public float CgstRate
		{
			get
			{
				return this._CgstRate;
			}
			set
			{
				if ((this._CgstRate != value))
				{
					this.OnCgstRateChanging(value);
					this.SendPropertyChanging();
					this._CgstRate = value;
					this.SendPropertyChanged("CgstRate");
					this.OnCgstRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SgstRate", DbType="Real NOT NULL")]
		public float SgstRate
		{
			get
			{
				return this._SgstRate;
			}
			set
			{
				if ((this._SgstRate != value))
				{
					this.OnSgstRateChanging(value);
					this.SendPropertyChanging();
					this._SgstRate = value;
					this.SendPropertyChanged("SgstRate");
					this.OnSgstRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IgstRate", DbType="Real NOT NULL")]
		public float IgstRate
		{
			get
			{
				return this._IgstRate;
			}
			set
			{
				if ((this._IgstRate != value))
				{
					this.OnIgstRateChanging(value);
					this.SendPropertyChanging();
					this._IgstRate = value;
					this.SendPropertyChanged("IgstRate");
					this.OnIgstRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CgstAmount", DbType="Real NOT NULL")]
		public float CgstAmount
		{
			get
			{
				return this._CgstAmount;
			}
			set
			{
				if ((this._CgstAmount != value))
				{
					this.OnCgstAmountChanging(value);
					this.SendPropertyChanging();
					this._CgstAmount = value;
					this.SendPropertyChanged("CgstAmount");
					this.OnCgstAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SgstAmount", DbType="Real NOT NULL")]
		public float SgstAmount
		{
			get
			{
				return this._SgstAmount;
			}
			set
			{
				if ((this._SgstAmount != value))
				{
					this.OnSgstAmountChanging(value);
					this.SendPropertyChanging();
					this._SgstAmount = value;
					this.SendPropertyChanged("SgstAmount");
					this.OnSgstAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IgstAmount", DbType="Real NOT NULL")]
		public float IgstAmount
		{
			get
			{
				return this._IgstAmount;
			}
			set
			{
				if ((this._IgstAmount != value))
				{
					this.OnIgstAmountChanging(value);
					this.SendPropertyChanging();
					this._IgstAmount = value;
					this.SendPropertyChanged("IgstAmount");
					this.OnIgstAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cess", DbType="Real NOT NULL")]
		public float Cess
		{
			get
			{
				return this._Cess;
			}
			set
			{
				if ((this._Cess != value))
				{
					this.OnCessChanging(value);
					this.SendPropertyChanging();
					this._Cess = value;
					this.SendPropertyChanged("Cess");
					this.OnCessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CessRs", DbType="Real NOT NULL")]
		public float CessRs
		{
			get
			{
				return this._CessRs;
			}
			set
			{
				if ((this._CessRs != value))
				{
					this.OnCessRsChanging(value);
					this.SendPropertyChanging();
					this._CessRs = value;
					this.SendPropertyChanged("CessRs");
					this.OnCessRsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Real NOT NULL")]
		public float Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbItem_DbSalesInvoiceItemDetail", Storage="_DbItem", ThisKey="ItemCode", OtherKey="ItemCode", IsForeignKey=true)]
		public DbItem DbItem
		{
			get
			{
				return this._DbItem.Entity;
			}
			set
			{
				DbItem previousValue = this._DbItem.Entity;
				if (((previousValue != value) 
							|| (this._DbItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DbItem.Entity = null;
						previousValue.DbSalesInvoiceItemDetails.Remove(this);
					}
					this._DbItem.Entity = value;
					if ((value != null))
					{
						value.DbSalesInvoiceItemDetails.Add(this);
						this._ItemCode = value.ItemCode;
					}
					else
					{
						this._ItemCode = default(string);
					}
					this.SendPropertyChanged("DbItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbSalesInvoiceHeader_DbSalesInvoiceItemDetail", Storage="_DbSalesInvoiceHeader", ThisKey="InvoiceNo", OtherKey="InvoiceNo", IsForeignKey=true)]
		public DbSalesInvoiceHeader DbSalesInvoiceHeader
		{
			get
			{
				return this._DbSalesInvoiceHeader.Entity;
			}
			set
			{
				DbSalesInvoiceHeader previousValue = this._DbSalesInvoiceHeader.Entity;
				if (((previousValue != value) 
							|| (this._DbSalesInvoiceHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DbSalesInvoiceHeader.Entity = null;
						previousValue.DbSalesInvoiceItemDetails.Remove(this);
					}
					this._DbSalesInvoiceHeader.Entity = value;
					if ((value != null))
					{
						value.DbSalesInvoiceItemDetails.Add(this);
						this._InvoiceNo = value.InvoiceNo;
					}
					else
					{
						this._InvoiceNo = default(int);
					}
					this.SendPropertyChanged("DbSalesInvoiceHeader");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbUnit_DbSalesInvoiceItemDetail", Storage="_DbUnit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public DbUnit DbUnit
		{
			get
			{
				return this._DbUnit.Entity;
			}
			set
			{
				DbUnit previousValue = this._DbUnit.Entity;
				if (((previousValue != value) 
							|| (this._DbUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DbUnit.Entity = null;
						previousValue.DbSalesInvoiceItemDetails.Remove(this);
					}
					this._DbUnit.Entity = value;
					if ((value != null))
					{
						value.DbSalesInvoiceItemDetails.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("DbUnit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DbState")]
	public partial class DbState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StateId;
		
		private string _StateName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStateIdChanging(int value);
    partial void OnStateIdChanged();
    partial void OnStateNameChanging(string value);
    partial void OnStateNameChanged();
    #endregion
		
		public DbState()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StateId
		{
			get
			{
				return this._StateId;
			}
			set
			{
				if ((this._StateId != value))
				{
					this.OnStateIdChanging(value);
					this.SendPropertyChanging();
					this._StateId = value;
					this.SendPropertyChanged("StateId");
					this.OnStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this.OnStateNameChanging(value);
					this.SendPropertyChanging();
					this._StateName = value;
					this.SendPropertyChanged("StateName");
					this.OnStateNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DbStateCode")]
	public partial class DbStateCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _StateCode;
		
		private string _StateName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStateCodeChanging(string value);
    partial void OnStateCodeChanged();
    partial void OnStateNameChanging(string value);
    partial void OnStateNameChanged();
    #endregion
		
		public DbStateCode()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateCode", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string StateCode
		{
			get
			{
				return this._StateCode;
			}
			set
			{
				if ((this._StateCode != value))
				{
					this.OnStateCodeChanging(value);
					this.SendPropertyChanging();
					this._StateCode = value;
					this.SendPropertyChanged("StateCode");
					this.OnStateCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this.OnStateNameChanging(value);
					this.SendPropertyChanging();
					this._StateName = value;
					this.SendPropertyChanged("StateName");
					this.OnStateNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DbSupplier")]
	public partial class DbSupplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SupplierId;
		
		private string _SupplierName;
		
		private string _Gstin;
		
		private string _Pan;
		
		private string _Mobile;
		
		private string _Landline;
		
		private string _Email;
		
		private string _Address;
		
		private string _Pincode;
		
		private string _City;
		
		private string _State;
		
		private string _Country;
		
		private EntitySet<DbPurchaseInvoiceHeader> _DbPurchaseInvoiceHeaders;
		
		private EntitySet<DbSupplierLedger> _DbSupplierLedgers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSupplierIdChanging(int value);
    partial void OnSupplierIdChanged();
    partial void OnSupplierNameChanging(string value);
    partial void OnSupplierNameChanged();
    partial void OnGstinChanging(string value);
    partial void OnGstinChanged();
    partial void OnPanChanging(string value);
    partial void OnPanChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnLandlineChanging(string value);
    partial void OnLandlineChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPincodeChanging(string value);
    partial void OnPincodeChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    #endregion
		
		public DbSupplier()
		{
			this._DbPurchaseInvoiceHeaders = new EntitySet<DbPurchaseInvoiceHeader>(new Action<DbPurchaseInvoiceHeader>(this.attach_DbPurchaseInvoiceHeaders), new Action<DbPurchaseInvoiceHeader>(this.detach_DbPurchaseInvoiceHeaders));
			this._DbSupplierLedgers = new EntitySet<DbSupplierLedger>(new Action<DbSupplierLedger>(this.attach_DbSupplierLedgers), new Action<DbSupplierLedger>(this.detach_DbSupplierLedgers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this.OnSupplierNameChanging(value);
					this.SendPropertyChanging();
					this._SupplierName = value;
					this.SendPropertyChanged("SupplierName");
					this.OnSupplierNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gstin", DbType="VarChar(15)")]
		public string Gstin
		{
			get
			{
				return this._Gstin;
			}
			set
			{
				if ((this._Gstin != value))
				{
					this.OnGstinChanging(value);
					this.SendPropertyChanging();
					this._Gstin = value;
					this.SendPropertyChanged("Gstin");
					this.OnGstinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pan", DbType="VarChar(10)")]
		public string Pan
		{
			get
			{
				return this._Pan;
			}
			set
			{
				if ((this._Pan != value))
				{
					this.OnPanChanging(value);
					this.SendPropertyChanging();
					this._Pan = value;
					this.SendPropertyChanged("Pan");
					this.OnPanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(50)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Landline", DbType="VarChar(50)")]
		public string Landline
		{
			get
			{
				return this._Landline;
			}
			set
			{
				if ((this._Landline != value))
				{
					this.OnLandlineChanging(value);
					this.SendPropertyChanging();
					this._Landline = value;
					this.SendPropertyChanged("Landline");
					this.OnLandlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pincode", DbType="VarChar(50)")]
		public string Pincode
		{
			get
			{
				return this._Pincode;
			}
			set
			{
				if ((this._Pincode != value))
				{
					this.OnPincodeChanging(value);
					this.SendPropertyChanging();
					this._Pincode = value;
					this.SendPropertyChanged("Pincode");
					this.OnPincodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbSupplier_DbPurchaseInvoiceHeader", Storage="_DbPurchaseInvoiceHeaders", ThisKey="SupplierId", OtherKey="SupplierId")]
		public EntitySet<DbPurchaseInvoiceHeader> DbPurchaseInvoiceHeaders
		{
			get
			{
				return this._DbPurchaseInvoiceHeaders;
			}
			set
			{
				this._DbPurchaseInvoiceHeaders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbSupplier_DbSupplierLedger", Storage="_DbSupplierLedgers", ThisKey="SupplierId", OtherKey="SupplierId")]
		public EntitySet<DbSupplierLedger> DbSupplierLedgers
		{
			get
			{
				return this._DbSupplierLedgers;
			}
			set
			{
				this._DbSupplierLedgers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DbPurchaseInvoiceHeaders(DbPurchaseInvoiceHeader entity)
		{
			this.SendPropertyChanging();
			entity.DbSupplier = this;
		}
		
		private void detach_DbPurchaseInvoiceHeaders(DbPurchaseInvoiceHeader entity)
		{
			this.SendPropertyChanging();
			entity.DbSupplier = null;
		}
		
		private void attach_DbSupplierLedgers(DbSupplierLedger entity)
		{
			this.SendPropertyChanging();
			entity.DbSupplier = this;
		}
		
		private void detach_DbSupplierLedgers(DbSupplierLedger entity)
		{
			this.SendPropertyChanging();
			entity.DbSupplier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DbSupplierLedger")]
	public partial class DbSupplierLedger : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SupplierLedgerId;
		
		private int _SupplierId;
		
		private int _InvoiceNo;
		
		private string _Prefix;
		
		private System.Nullable<int> _PaymentNo;
		
		private string _PaymentMethod;
		
		private System.DateTime _PaymentDate;
		
		private System.Nullable<int> _BankAccountId;
		
		private System.Nullable<float> _Credit;
		
		private System.Nullable<float> _Debit;
		
		private string _Note;
		
		private System.Nullable<int> _BankTransactionId;
		
		private string _Description;
		
		private EntityRef<DbBankAccount> _DbBankAccount;
		
		private EntityRef<DbBankTransaction> _DbBankTransaction;
		
		private EntityRef<DbPurchaseInvoiceHeader> _DbPurchaseInvoiceHeader;
		
		private EntityRef<DbSupplier> _DbSupplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSupplierLedgerIdChanging(int value);
    partial void OnSupplierLedgerIdChanged();
    partial void OnSupplierIdChanging(int value);
    partial void OnSupplierIdChanged();
    partial void OnInvoiceNoChanging(int value);
    partial void OnInvoiceNoChanged();
    partial void OnPrefixChanging(string value);
    partial void OnPrefixChanged();
    partial void OnPaymentNoChanging(System.Nullable<int> value);
    partial void OnPaymentNoChanged();
    partial void OnPaymentMethodChanging(string value);
    partial void OnPaymentMethodChanged();
    partial void OnPaymentDateChanging(System.DateTime value);
    partial void OnPaymentDateChanged();
    partial void OnBankAccountIdChanging(System.Nullable<int> value);
    partial void OnBankAccountIdChanged();
    partial void OnCreditChanging(System.Nullable<float> value);
    partial void OnCreditChanged();
    partial void OnDebitChanging(System.Nullable<float> value);
    partial void OnDebitChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnBankTransactionIdChanging(System.Nullable<int> value);
    partial void OnBankTransactionIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public DbSupplierLedger()
		{
			this._DbBankAccount = default(EntityRef<DbBankAccount>);
			this._DbBankTransaction = default(EntityRef<DbBankTransaction>);
			this._DbPurchaseInvoiceHeader = default(EntityRef<DbPurchaseInvoiceHeader>);
			this._DbSupplier = default(EntityRef<DbSupplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierLedgerId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SupplierLedgerId
		{
			get
			{
				return this._SupplierLedgerId;
			}
			set
			{
				if ((this._SupplierLedgerId != value))
				{
					this.OnSupplierLedgerIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierLedgerId = value;
					this.SendPropertyChanged("SupplierLedgerId");
					this.OnSupplierLedgerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					if (this._DbSupplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="Int NOT NULL")]
		public int InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					if (this._DbPurchaseInvoiceHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prefix", DbType="VarChar(10)")]
		public string Prefix
		{
			get
			{
				return this._Prefix;
			}
			set
			{
				if ((this._Prefix != value))
				{
					this.OnPrefixChanging(value);
					this.SendPropertyChanging();
					this._Prefix = value;
					this.SendPropertyChanged("Prefix");
					this.OnPrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentNo", DbType="Int")]
		public System.Nullable<int> PaymentNo
		{
			get
			{
				return this._PaymentNo;
			}
			set
			{
				if ((this._PaymentNo != value))
				{
					this.OnPaymentNoChanging(value);
					this.SendPropertyChanging();
					this._PaymentNo = value;
					this.SendPropertyChanged("PaymentNo");
					this.OnPaymentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMethod", DbType="VarChar(50)")]
		public string PaymentMethod
		{
			get
			{
				return this._PaymentMethod;
			}
			set
			{
				if ((this._PaymentMethod != value))
				{
					this.OnPaymentMethodChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethod = value;
					this.SendPropertyChanged("PaymentMethod");
					this.OnPaymentMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="Date NOT NULL")]
		public System.DateTime PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountId", DbType="Int")]
		public System.Nullable<int> BankAccountId
		{
			get
			{
				return this._BankAccountId;
			}
			set
			{
				if ((this._BankAccountId != value))
				{
					if (this._DbBankAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankAccountIdChanging(value);
					this.SendPropertyChanging();
					this._BankAccountId = value;
					this.SendPropertyChanged("BankAccountId");
					this.OnBankAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credit", DbType="Real")]
		public System.Nullable<float> Credit
		{
			get
			{
				return this._Credit;
			}
			set
			{
				if ((this._Credit != value))
				{
					this.OnCreditChanging(value);
					this.SendPropertyChanging();
					this._Credit = value;
					this.SendPropertyChanged("Credit");
					this.OnCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Debit", DbType="Real")]
		public System.Nullable<float> Debit
		{
			get
			{
				return this._Debit;
			}
			set
			{
				if ((this._Debit != value))
				{
					this.OnDebitChanging(value);
					this.SendPropertyChanging();
					this._Debit = value;
					this.SendPropertyChanged("Debit");
					this.OnDebitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="VarChar(50)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankTransactionId", DbType="Int")]
		public System.Nullable<int> BankTransactionId
		{
			get
			{
				return this._BankTransactionId;
			}
			set
			{
				if ((this._BankTransactionId != value))
				{
					if (this._DbBankTransaction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._BankTransactionId = value;
					this.SendPropertyChanged("BankTransactionId");
					this.OnBankTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbBankAccount_DbSupplierLedger", Storage="_DbBankAccount", ThisKey="BankAccountId", OtherKey="BankAccountId", IsForeignKey=true)]
		public DbBankAccount DbBankAccount
		{
			get
			{
				return this._DbBankAccount.Entity;
			}
			set
			{
				DbBankAccount previousValue = this._DbBankAccount.Entity;
				if (((previousValue != value) 
							|| (this._DbBankAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DbBankAccount.Entity = null;
						previousValue.DbSupplierLedgers.Remove(this);
					}
					this._DbBankAccount.Entity = value;
					if ((value != null))
					{
						value.DbSupplierLedgers.Add(this);
						this._BankAccountId = value.BankAccountId;
					}
					else
					{
						this._BankAccountId = default(Nullable<int>);
					}
					this.SendPropertyChanged("DbBankAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbBankTransaction_DbSupplierLedger", Storage="_DbBankTransaction", ThisKey="BankTransactionId", OtherKey="BankTransactionId", IsForeignKey=true)]
		public DbBankTransaction DbBankTransaction
		{
			get
			{
				return this._DbBankTransaction.Entity;
			}
			set
			{
				DbBankTransaction previousValue = this._DbBankTransaction.Entity;
				if (((previousValue != value) 
							|| (this._DbBankTransaction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DbBankTransaction.Entity = null;
						previousValue.DbSupplierLedgers.Remove(this);
					}
					this._DbBankTransaction.Entity = value;
					if ((value != null))
					{
						value.DbSupplierLedgers.Add(this);
						this._BankTransactionId = value.BankTransactionId;
					}
					else
					{
						this._BankTransactionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("DbBankTransaction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbPurchaseInvoiceHeader_DbSupplierLedger", Storage="_DbPurchaseInvoiceHeader", ThisKey="InvoiceNo", OtherKey="InvoiceNo", IsForeignKey=true)]
		public DbPurchaseInvoiceHeader DbPurchaseInvoiceHeader
		{
			get
			{
				return this._DbPurchaseInvoiceHeader.Entity;
			}
			set
			{
				DbPurchaseInvoiceHeader previousValue = this._DbPurchaseInvoiceHeader.Entity;
				if (((previousValue != value) 
							|| (this._DbPurchaseInvoiceHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DbPurchaseInvoiceHeader.Entity = null;
						previousValue.DbSupplierLedgers.Remove(this);
					}
					this._DbPurchaseInvoiceHeader.Entity = value;
					if ((value != null))
					{
						value.DbSupplierLedgers.Add(this);
						this._InvoiceNo = value.InvoiceNo;
					}
					else
					{
						this._InvoiceNo = default(int);
					}
					this.SendPropertyChanged("DbPurchaseInvoiceHeader");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbSupplier_DbSupplierLedger", Storage="_DbSupplier", ThisKey="SupplierId", OtherKey="SupplierId", IsForeignKey=true)]
		public DbSupplier DbSupplier
		{
			get
			{
				return this._DbSupplier.Entity;
			}
			set
			{
				DbSupplier previousValue = this._DbSupplier.Entity;
				if (((previousValue != value) 
							|| (this._DbSupplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DbSupplier.Entity = null;
						previousValue.DbSupplierLedgers.Remove(this);
					}
					this._DbSupplier.Entity = value;
					if ((value != null))
					{
						value.DbSupplierLedgers.Add(this);
						this._SupplierId = value.SupplierId;
					}
					else
					{
						this._SupplierId = default(int);
					}
					this.SendPropertyChanged("DbSupplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DbTax")]
	public partial class DbTax : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TaxId;
		
		private string _TaxName;
		
		private float _TaxRate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaxIdChanging(int value);
    partial void OnTaxIdChanged();
    partial void OnTaxNameChanging(string value);
    partial void OnTaxNameChanged();
    partial void OnTaxRateChanging(float value);
    partial void OnTaxRateChanged();
    #endregion
		
		public DbTax()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TaxId
		{
			get
			{
				return this._TaxId;
			}
			set
			{
				if ((this._TaxId != value))
				{
					this.OnTaxIdChanging(value);
					this.SendPropertyChanging();
					this._TaxId = value;
					this.SendPropertyChanged("TaxId");
					this.OnTaxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxName", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string TaxName
		{
			get
			{
				return this._TaxName;
			}
			set
			{
				if ((this._TaxName != value))
				{
					this.OnTaxNameChanging(value);
					this.SendPropertyChanging();
					this._TaxName = value;
					this.SendPropertyChanged("TaxName");
					this.OnTaxNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxRate", DbType="Real NOT NULL")]
		public float TaxRate
		{
			get
			{
				return this._TaxRate;
			}
			set
			{
				if ((this._TaxRate != value))
				{
					this.OnTaxRateChanging(value);
					this.SendPropertyChanging();
					this._TaxRate = value;
					this.SendPropertyChanged("TaxRate");
					this.OnTaxRateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
